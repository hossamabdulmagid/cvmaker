[{"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\index.js":"1","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\serviceWorker.js":"2","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\registerServiceWorker.js":"3","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\store.js":"4","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\App.jsx":"5","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\root-reducer.js":"6","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\lib\\privateRoute.js":"7","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\lib\\publicOnlyRoute.js":"8","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\firebase\\firebase.utils.js":"9","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\user\\user.action.js":"10","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\user\\user.selector.js":"11","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\lib\\scrolToTop.jsx":"12","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\nav\\nav.component.jsx":"13","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\bottom\\bottom.component.jsx":"14","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\header\\header.component.jsx":"15","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\forget-password\\forget-password.component.jsx":"16","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\footer\\footer.component.jsx":"17","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\signin-signup\\signin-signup.component.jsx":"18","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\privacy\\privacy.component.jsx":"19","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\lang\\lang.component.jsx":"20","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\old-cv\\old-cv.component.jsx":"21","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\help\\help.component.jsx":"22","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\contact\\contact.component.jsx":"23","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\tips\\tip.component.jsx":"24","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\notfound\\notfound.component.jsx":"25","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\user\\userReducer.js":"26","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\createcv.component.jsx":"27","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\education\\educationReducer.js":"28","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\addtolist\\addtolistReducer.js":"29","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\oldcv\\oldcvReducer.js":"30","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\qualifications\\qualificationsReducer.js":"31","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\references\\referencesReducer.js":"32","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\createnewcv\\createnewcvReducer.js":"33","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\newckeditor\\newckeditorReducer.js":"34","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\interests\\interestsReducer.js":"35","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\basicinfo\\basicinfoReducer.js":"36","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\workexperince\\workexperinceReducer.js":"37","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\allsections\\allsectionsReducer.js":"38","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\user\\userType.js":"39","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\createnewcv\\createnewcvAction.js":"40","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\oldcv\\oldcvAction.js":"41","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\contact\\contact.styles.jsx":"42","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\tips\\tips.styles.jsx":"43","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\help\\help.styles.jsx":"44","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\old-cv\\accordion.jsx":"45","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\old-cv\\deleteModal.jsx":"46","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\old-cv\\old-cv.styles.jsx":"47","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\allsections\\allsectionsType.js":"48","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\basicinfo\\basicinfoType.js":"49","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\interests\\interestsType.js":"50","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\workexperince\\workexperinceType.js":"51","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\newckeditor\\newckeditorType.js":"52","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\createnewcv\\createnewcvType.js":"53","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\references\\referencesType.js":"54","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\qualifications\\qualificationsType.js":"55","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\oldcv\\oldcvType.js":"56","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\addtolist\\addtolistType.js":"57","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\education\\educationType.js":"58","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\nav-guest\\navGuest.component.jsx":"59","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\lang\\lang.styles.jsx":"60","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\allsections\\allsectionsAction.js":"61","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\checkbox.jsx":"62","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\lib\\addckeditor.jsx":"63","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\radiobox.jsx":"64","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\interests\\interests.component.jsx":"65","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\qualifications\\qualifications.component.jsx":"66","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\references\\references.component.jsx":"67","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\workexperience\\workexperience.component.jsx":"68","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\education\\education.component.jsx":"69","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\basicinfo\\basicinfo.component.jsx":"70","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\lib\\addform.jsx":"71","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\nav-guest\\navGuest.styles.jsx":"72","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\lib\\random.js":"73","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\newckeditor\\newckeditorAction.js":"74","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\interests\\interestsAction.js":"75","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\lib\\styles.jsx":"76","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\qualifications\\qualificationsAction.js":"77","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\references\\referencesAction.js":"78","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\education\\educationAction.js":"79","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\basicinfo\\basicinfoAction.js":"80","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\interests\\interests.styles.jsx":"81","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\workexperince\\workexperinceAction.js":"82","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\addtolist\\addtolistAction.js":"83","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\basicinfo\\uploadimage.jsx":"84","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\education\\education.styles.jsx":"85","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\basicinfo\\basicinfo.styles.jsx":"86","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\education\\addEducation.component.jsx":"87","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\workexperience\\addworkexpernice.jsx":"88","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\workexperience\\workexperience.styles.jsx":"89","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\references\\references.styles.jsx":"90","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\qualifications\\qualifications.styles.jsx":"91","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\createcv.styles.jsx":"92","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\privacy\\privacy.styles.jsx":"93","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\footer\\footer.styles.jsx":"94","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\signin-signup\\signin-signup.styles.jsx":"95","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\forget-password\\forget-password.styles.jsx":"96","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\header\\header.styles.jsx":"97","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\sign-up\\sign-up.component.jsx":"98","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\sign-in\\sign-in.component.jsx":"99","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\content\\content.component.jsx":"100","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\bottom\\botttom.styles.jsx":"101","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\nav\\nav.styles.jsx":"102","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\carousel\\carousel.component.jsx":"103","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\sign-up\\sign-up.styles.jsx":"104","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\sign-in\\sign-in.styles.jsx":"105","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\content\\content.styles.jsx":"106"},{"size":896,"mtime":1617902918780,"results":"107","hashOfConfig":"108"},{"size":5098,"mtime":1609339979172,"results":"109","hashOfConfig":"108"},{"size":4394,"mtime":1609339979136,"results":"110","hashOfConfig":"108"},{"size":573,"mtime":1620238085360,"results":"111","hashOfConfig":"108"},{"size":3898,"mtime":1625387140968,"results":"112","hashOfConfig":"108"},{"size":1557,"mtime":1614004757193,"results":"113","hashOfConfig":"108"},{"size":554,"mtime":1611151625036,"results":"114","hashOfConfig":"108"},{"size":484,"mtime":1611151625048,"results":"115","hashOfConfig":"108"},{"size":1942,"mtime":1629213645397,"results":"116","hashOfConfig":"108"},{"size":1139,"mtime":1613661563967,"results":"117","hashOfConfig":"108"},{"size":192,"mtime":1604970300197,"results":"118","hashOfConfig":"108"},{"size":344,"mtime":1611151626127,"results":"119","hashOfConfig":"108"},{"size":2698,"mtime":1611151625847,"results":"120","hashOfConfig":"108"},{"size":2393,"mtime":1611150792305,"results":"121","hashOfConfig":"108"},{"size":2876,"mtime":1612786899361,"results":"122","hashOfConfig":"108"},{"size":3596,"mtime":1611150864181,"results":"123","hashOfConfig":"108"},{"size":932,"mtime":1611150816731,"results":"124","hashOfConfig":"108"},{"size":1075,"mtime":1625732995762,"results":"125","hashOfConfig":"108"},{"size":10470,"mtime":1611151627236,"results":"126","hashOfConfig":"108"},{"size":3152,"mtime":1611151349028,"results":"127","hashOfConfig":"108"},{"size":7338,"mtime":1624783446192,"results":"128","hashOfConfig":"108"},{"size":8101,"mtime":1611151626981,"results":"129","hashOfConfig":"108"},{"size":598,"mtime":1611151626141,"results":"130","hashOfConfig":"108"},{"size":3265,"mtime":1611151627300,"results":"131","hashOfConfig":"108"},{"size":298,"mtime":1624520048061,"results":"132","hashOfConfig":"108"},{"size":890,"mtime":1618238784811,"results":"133","hashOfConfig":"108"},{"size":28598,"mtime":1629214789985,"results":"134","hashOfConfig":"108"},{"size":1950,"mtime":1624788179341,"results":"135","hashOfConfig":"108"},{"size":459,"mtime":1604970300192,"results":"136","hashOfConfig":"108"},{"size":1543,"mtime":1624571206369,"results":"137","hashOfConfig":"108"},{"size":1053,"mtime":1610972845018,"results":"138","hashOfConfig":"108"},{"size":986,"mtime":1610974656041,"results":"139","hashOfConfig":"108"},{"size":1848,"mtime":1613642748095,"results":"140","hashOfConfig":"108"},{"size":1486,"mtime":1624903062393,"results":"141","hashOfConfig":"108"},{"size":959,"mtime":1610971383651,"results":"142","hashOfConfig":"108"},{"size":1484,"mtime":1614018191299,"results":"143","hashOfConfig":"108"},{"size":2286,"mtime":1629212582194,"results":"144","hashOfConfig":"108"},{"size":788,"mtime":1612784005230,"results":"145","hashOfConfig":"108"},{"size":193,"mtime":1611424903328,"results":"146","hashOfConfig":"108"},{"size":5398,"mtime":1624903062229,"results":"147","hashOfConfig":"108"},{"size":4436,"mtime":1624779040238,"results":"148","hashOfConfig":"108"},{"size":350,"mtime":1604970300172,"results":"149","hashOfConfig":"108"},{"size":736,"mtime":1609246141574,"results":"150","hashOfConfig":"108"},{"size":1297,"mtime":1609246141533,"results":"151","hashOfConfig":"108"},{"size":3297,"mtime":1625048261639,"results":"152","hashOfConfig":"108"},{"size":1295,"mtime":1624783445772,"results":"153","hashOfConfig":"108"},{"size":2810,"mtime":1609951281907,"results":"154","hashOfConfig":"108"},{"size":171,"mtime":1611744908595,"results":"155","hashOfConfig":"108"},{"size":360,"mtime":1612793274400,"results":"156","hashOfConfig":"108"},{"size":182,"mtime":1610971383661,"results":"157","hashOfConfig":"108"},{"size":691,"mtime":1629209788562,"results":"158","hashOfConfig":"108"},{"size":404,"mtime":1612677550265,"results":"159","hashOfConfig":"108"},{"size":438,"mtime":1612370462117,"results":"160","hashOfConfig":"108"},{"size":189,"mtime":1610974656049,"results":"161","hashOfConfig":"108"},{"size":217,"mtime":1610972845033,"results":"162","hashOfConfig":"108"},{"size":456,"mtime":1612272978466,"results":"163","hashOfConfig":"108"},{"size":159,"mtime":1604970300193,"results":"164","hashOfConfig":"108"},{"size":360,"mtime":1612796424084,"results":"165","hashOfConfig":"108"},{"size":953,"mtime":1611150883609,"results":"166","hashOfConfig":"108"},{"size":560,"mtime":1609246141551,"results":"167","hashOfConfig":"108"},{"size":2340,"mtime":1625129108027,"results":"168","hashOfConfig":"108"},{"size":1385,"mtime":1624985207501,"results":"169","hashOfConfig":"108"},{"size":3520,"mtime":1625733615946,"results":"170","hashOfConfig":"108"},{"size":1286,"mtime":1624985207507,"results":"171","hashOfConfig":"108"},{"size":4503,"mtime":1620590171944,"results":"172","hashOfConfig":"108"},{"size":4640,"mtime":1624779040274,"results":"173","hashOfConfig":"108"},{"size":4522,"mtime":1624520048029,"results":"174","hashOfConfig":"108"},{"size":8770,"mtime":1629214811894,"results":"175","hashOfConfig":"108"},{"size":5428,"mtime":1624788179758,"results":"176","hashOfConfig":"108"},{"size":22490,"mtime":1620222678169,"results":"177","hashOfConfig":"108"},{"size":5856,"mtime":1625733616202,"results":"178","hashOfConfig":"108"},{"size":338,"mtime":1609865751795,"results":"179","hashOfConfig":"108"},{"size":565,"mtime":1625733615400,"results":"180","hashOfConfig":"108"},{"size":3668,"mtime":1625125799197,"results":"181","hashOfConfig":"108"},{"size":1887,"mtime":1612676909386,"results":"182","hashOfConfig":"108"},{"size":572,"mtime":1610537713836,"results":"183","hashOfConfig":"108"},{"size":1922,"mtime":1612677027367,"results":"184","hashOfConfig":"108"},{"size":1837,"mtime":1612677048923,"results":"185","hashOfConfig":"108"},{"size":3719,"mtime":1624788179235,"results":"186","hashOfConfig":"108"},{"size":3406,"mtime":1624966198022,"results":"187","hashOfConfig":"108"},{"size":267,"mtime":1609425078761,"results":"188","hashOfConfig":"108"},{"size":7366,"mtime":1629214541312,"results":"189","hashOfConfig":"108"},{"size":158,"mtime":1604970300191,"results":"190","hashOfConfig":"108"},{"size":1860,"mtime":1611151171916,"results":"191","hashOfConfig":"108"},{"size":840,"mtime":1609946469013,"results":"192","hashOfConfig":"108"},{"size":1626,"mtime":1620222678173,"results":"193","hashOfConfig":"108"},{"size":4208,"mtime":1624788179331,"results":"194","hashOfConfig":"108"},{"size":3761,"mtime":1624781796042,"results":"195","hashOfConfig":"108"},{"size":1682,"mtime":1629208906925,"results":"196","hashOfConfig":"108"},{"size":169,"mtime":1609427720227,"results":"197","hashOfConfig":"108"},{"size":169,"mtime":1609427720018,"results":"198","hashOfConfig":"108"},{"size":4196,"mtime":1609946468689,"results":"199","hashOfConfig":"108"},{"size":727,"mtime":1604970300188,"results":"200","hashOfConfig":"108"},{"size":475,"mtime":1609181629379,"results":"201","hashOfConfig":"108"},{"size":920,"mtime":1609181630108,"results":"202","hashOfConfig":"108"},{"size":1512,"mtime":1609181629440,"results":"203","hashOfConfig":"108"},{"size":2135,"mtime":1610548422221,"results":"204","hashOfConfig":"108"},{"size":2895,"mtime":1611150894186,"results":"205","hashOfConfig":"108"},{"size":2761,"mtime":1611482902176,"results":"206","hashOfConfig":"108"},{"size":1794,"mtime":1611150807235,"results":"207","hashOfConfig":"108"},{"size":1066,"mtime":1609181629298,"results":"208","hashOfConfig":"108"},{"size":1245,"mtime":1609181629605,"results":"209","hashOfConfig":"108"},{"size":579,"mtime":1611150799413,"results":"210","hashOfConfig":"108"},{"size":1280,"mtime":1609181629702,"results":"211","hashOfConfig":"108"},{"size":1342,"mtime":1609181629654,"results":"212","hashOfConfig":"108"},{"size":783,"mtime":1620222678159,"results":"213","hashOfConfig":"108"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},"1k5r5ya",{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"216"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"216"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"216"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"216"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"216"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"216"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"216"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"216"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"216"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"216"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"216"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"216"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"216"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"216"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"216"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"216"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"367","messages":"368","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"216"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"216"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"216"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"216"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"216"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"216"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"216"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\index.js",[],["450","451"],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\serviceWorker.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\registerServiceWorker.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\store.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\App.jsx",["452","453"],"import { Component, StrictMode, Suspense, Fragment } from \"react\";\nimport Nav from \"./components/nav/nav.component\";\nimport Head from \"./components/header/header.component\";\nimport Bottom from \"./components/bottom/bottom.component\";\nimport Footer from \"./components/footer/footer.component\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport SigninSignup from \"./pages/signin-signup/signin-signup.component\";\nimport Privacy from \"./pages/privacy/privacy.component\";\nimport Contact from \"./pages/contact/contact.component\";\nimport Help from \"./pages/help/help.component\";\nimport Tips from \"./pages/tips/tip.component\";\nimport Lang from \"./pages/lang/lang.component\";\nimport CreateCv from \"./pages/create-cv/createcv.component\";\nimport ScrollToTop from \"./lib/scrolToTop\";\nimport { auth, createUserProfileDocument } from \"./firebase/firebase.utils\";\nimport setCurrentUser from \"./redux/user/user.action\";\nimport { connect } from \"react-redux\";\nimport PublicOnlyRoute from \"./lib/publicOnlyRoute\";\nimport PrivateRoute from \"./lib/privateRoute\";\nimport OldCv from \"./pages/old-cv/old-cv.component\";\nimport { selectCurrentUser } from \"./redux/user/user.selector\";\nimport { createStructuredSelector } from \"reselect\";\nimport ForgetPassword from \"./components/forget-password/forget-password.component\";\nimport { Spinner } from \"@chakra-ui/core\";\nimport NotFound from \"./pages/notfound/notfound.component\";\n\nclass App extends Component {\n  unsubscribeFormAuth = null;\n  componentDidMount() {\n    const { setCurrentUser } = this.props;\n    this.unsubscribeFormAuth = auth.onAuthStateChanged(async (userAuth) => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        userRef.onSnapshot((snapShot) => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data(),\n          });\n        });\n      }\n      setCurrentUser(userAuth);\n    });\n  }\n  componentWillUnmount() {\n    this.unsubscribeFormAuth();\n  }\n\n  render() {\n    const { currentUser } = this.props;\n    return (\n      <Fragment>\n        <StrictMode>\n          <Suspense fallback={<Spinner />}>\n            <ScrollToTop />\n            <div>\n              <Nav />\n              <Switch>\n                <Route path=\"/\" exact component={Head} />\n                <Route\n                  path=\"/login\"\n                  exact\n                  render={() =>\n                    currentUser ? <Redirect to=\"/cv\" /> : <SigninSignup />\n                  }\n                />\n                <PrivateRoute exact path=\"/login\" component={SigninSignup} />\n                <Route path=\"/policy\" component={Privacy} />\n                <Route path=\"/contact\" component={Contact} />\n                <Route path=\"/Help\" component={Help} />\n                <Route path=\"/tips\" component={Tips} />\n                <Route path=\"/lang\" component={Lang} />\n                <Route path=\"/forgetpassword\" component={ForgetPassword} />\n                <Route\n                  path=\"/create-cv/:id\"\n                  render={() =>\n                    currentUser ? <Redirect to=\"/cv\" /> : <SigninSignup />\n                  }\n                  component={CreateCv}\n                />\n                <PrivateRoute\n                  exact\n                  path=\"/cv\"\n                  render={() =>\n                    currentUser ? <Redirect to=\"/cv\" /> : <SigninSignup />\n                  }\n                  component={OldCv}\n                />\n              </Switch>\n              <Bottom />\n              <Footer />\n            </div>\n          </Suspense>\n        </StrictMode>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\root-reducer.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\lib\\privateRoute.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\lib\\publicOnlyRoute.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\firebase\\firebase.utils.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\user\\user.action.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\user\\user.selector.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\lib\\scrolToTop.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\nav\\nav.component.jsx",["454","455"],"import { useState } from \"react\";\nimport { Rapper, Span, LINK, Select, Icon, Small } from \"./nav.styles\";\nimport { auth } from \"../../firebase/firebase.utils\";\nimport { connect } from \"react-redux\";\nimport { selectCurrentUser } from \"../../redux/user/user.selector\";\nimport { createStructuredSelector } from \"reselect\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nconst Nav = ({ currentUser, displayName }) => {\n  const [languages, setLanguages] = useState([\n    \"English\",\n    \"العربية\",\n    \"Български\",\n    \"Čeština\",\n    \"Dansk\",\n    \"Deutsch\",\n    \"Eesti\",\n    \"keel\",\n    \"ქართული\",\n    \"Dutch\",\n    \"Español\",\n    \"فارسی\",\n    \"Français\",\n    \"Galician\",\n    \"Έλληνικά\",\n    \"Hungarian\",\n    \"Italiano\",\n    \"עברית\",\n    \"한국어\",\n    \"Norsk\",\n    \"Polski\",\n    \"Português\",\n    \"Român\",\n    \"Pусский\",\n    \"Slovenščina\",\n    \"Slovenský\",\n    \"Shqip\",\n    \"Suomi\",\n    \"Svenska\",\n    \"Türkçe\",\n    \"Українська\",\n    \"Tiếng\",\n    \"Việt\",\n    \"മലയാളം\",\n    \"中文\",\n    \"繁體中文\",\n    \"Hrvatski\",\n  ]);\n\n  return (\n    <Rapper>\n      <Container>\n        <Row bsPrefix=\"d-none d-md-flex d-lg-flex  d-xl-flex center-item\">\n          <Col xs={4} s={4} lg={6}>\n            <Span>Create, maintain, publish, and share your CVs for free</Span>\n          </Col>\n          <Col xs={4} s={4} lg={3}>\n            <Select>\n              {languages.map((singlelang, i) => (\n                <option key={i}>{singlelang}</option>\n              ))}\n            </Select>\n          </Col>\n          <Col xs={4} s={4} lg={3}>\n            {currentUser ? (\n              <LINK onClick={() => auth.signOut()} to=\"\">\n                <span>Sign Out ({currentUser.displayName})</span>\n              </LINK>\n            ) : (\n              <>\n                <Icon className=\"lock\" />\n                <LINK to=\"/login\">Login | Signup</LINK>\n              </>\n            )}\n          </Col>\n        </Row>\n        <Row bsPrefix=\"d-block d-md-none d-lg-none d-xl-none center-item\">\n          <Col xs={12} s={12} className=\"text-center\">\n            {currentUser ? (\n              <LINK onClick={() => auth.signOut()} to=\"\">\n                {\" \"}\n                <span>Sign Out ({currentUser.displayName})</span>\n              </LINK>\n            ) : (\n              <>\n                <Icon className=\"lock\" />\n                <LINK to=\"/login\">Login | Signup</LINK>\n              </>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    </Rapper>\n  );\n};\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n});\nexport default connect(mapStateToProps)(Nav);\n","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\bottom\\bottom.component.jsx",["456","457","458","459","460","461","462"],"import { useState } from \"react\";\nimport {\n  COL,\n  LINK,\n  IMG,\n  RapperText,\n  FLAG,\n  H6,\n  Container,\n  Li,\n  RapperdCols,\n  Ul,\n} from \"./botttom.styles\";\nimport \"../../App.css\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { RapperdCol } from \"../nav-guest/navGuest.styles\";\nconst Bottom = () => {\n  const [languages, setLanguages] = useState([\n    \"English\",\n    \"العربية\",\n    \"Български\",\n    \"Čeština\",\n    \"Dansk\",\n    \"Deutsch\",\n    \"Eesti\",\n    \"keel\",\n    \"ქართული\",\n    \"Dutch\",\n    \"Español\",\n    \"فارسی\",\n    \"Français\",\n    \"Galician\",\n    \"Έλληνικά\",\n    \"Hungarian\",\n    \"Italiano\",\n    \"עברית\",\n    \"한국어\",\n    \"Norsk\",\n    \"Polski\",\n    \"Português\",\n    \"Român\",\n    \"Pусский\",\n    \"Slovenščina\",\n    \"Slovenský\",\n    \"Shqip\",\n    \"Suomi\",\n    \"Svenska\",\n    \"Türkçe\",\n    \"Українська\",\n    \"Tiếng\",\n    \"Việt\",\n    \"മലയാളം\",\n    \"中文\",\n    \"繁體中文\",\n    \"Hrvatski\",\n  ]);\n\n  const [links, setLinks] = useState([\n    { title: \"Help\", url: \"help\" },\n    { title: \"Resume tips\", url: \"tips\" },\n    { title: \"Language credits\", url: \"lang\" },\n  ]);\n\n  return (\n    <Container className=\"container-fluid\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <Col xs={12} md={4} lg={4}>\n            <RapperdCols>\n              <H6>System </H6>\n              <RapperText>\n                <p> Secure 256 bit SSL encryption</p>\n                <p>Available on the Chrome webstore</p>\n                <p> follow updates at @cvCreator </p>\n              </RapperText>\n            </RapperdCols>\n          </Col>\n          <Col xs={12} md={4} lg={4}>\n            <RapperdCols>\n              <H6>Language </H6>\n              <Ul>\n                {languages.map((lang, i) => (\n                  <Li key={i}>\n                    <LINK to=\"\">{lang}</LINK>{\" \"}\n                  </Li>\n                ))}\n              </Ul>\n            </RapperdCols>\n          </Col>\n          <Col xs={12} md={4} lg={4}>\n            <RapperdCols>\n              <H6>Links </H6>\n              {links.map((link, i) => (\n                <div key={i}>\n                  <LINK to={link.url}>{link.title}</LINK>\n                </div>\n              ))}\n            </RapperdCols>\n          </Col>\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default Bottom;\n","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\header\\header.component.jsx",["463"],"import { useState } from \"react\";\nimport \"../../App.css\";\nimport {\n  RapperColor,\n  RapperContent,\n  Links,\n  SPan,\n  BUTTON,\n  RapperdRow,\n  Div,\n  RapperdCols,\n  Small,\n} from \"./header.styles\";\nimport Caro from \"../carousel/carousel.component\";\nimport Content from \"../content/content.component\";\nimport { Button } from \"@chakra-ui/core\";\nimport { Container, Col, Row } from \"react-bootstrap\";\nconst Head = () => {\n  const [download, setDownload] = useState(0);\n  const [save, setSave] = useState(0);\n  return (\n    <>\n      <RapperColor>\n        <RapperContent className=\"container\">\n          <RapperdRow>\n            <Row>\n              <Col xs={4} md={6} lg={6}>\n                <img src=\"cvcreator.png\" alt=\"\" />\n              </Col>\n\n              <Col xs={4} md={3} lg={4}>\n                <Small onClick={() => setDownload(download + 1)}>\n                  {download}\n                  download\n                </Small>\n              </Col>\n\n              <Col xs={4} md={3} lg={2}>\n                <Small onClick={() => setSave(save + 1)}>\n                  {save}\n                  saved\n                </Small>\n              </Col>\n            </Row>\n          </RapperdRow>\n\n          <RapperdRow>\n            <Row>\n              <Col xs={3} md={5} lg={5}>\n                <p>\n                  Create beautiful, professional resumes in minutes,\n                  <SPan> free.</SPan>\n                </p>\n              </Col>\n              <Col xs={3} md={3} lg={4} />\n\n              <Col xs={6} md={4} lg={3}>\n                <RapperdCols>\n                  <Links to=\"/cv\">\n                    <BUTTON variant=\"outline-dark\" size=\"xs\" variant=\"success\">\n                      <img\n                        src=\"ico_start.png\"\n                        alt=\"\"\n                        margin=\"1\"\n                        className=\"imgforcreateCv\"\n                      />\n                      Create a cv now\n                    </BUTTON>\n                  </Links>\n                </RapperdCols>\n              </Col>\n            </Row>\n          </RapperdRow>\n          <Row>\n            <Col xs={12} md={12} lg={12}>\n              <Caro />\n            </Col>\n          </Row>\n        </RapperContent>\n      </RapperColor>\n      <Container>\n        <Div className=\"row\">\n          <div className=\"col-7\">\n            <Button size=\"xs\"> Like 17k</Button>\n            <Button size=\"xs\"> twitter</Button>\n            <Button variant=\"info\" size=\"xs\">\n              in Share\n            </Button>\n          </div>\n          <div className=\"col-5\">\n            <small>\n              Already have your resumes on CV Creator?\n              <Button size=\"xs\">\n                <Links to=\"/login\">login </Links>{\" \"}\n              </Button>\n            </small>\n          </div>\n        </Div>\n        <Content />\n      </Container>\n    </>\n  );\n};\n\nexport default Head;\n","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\forget-password\\forget-password.component.jsx",["464","465","466","467","468","469","470","471","472","473","474","475","476"],"import { useRef, useState } from \"react\";\nimport {\n  COL,\n  Container,\n  Title,\n  ButtonSubmit,\n  LinkForSignInSignUp,\n  INPUT,\n  RapperdInput,\n  RapperdAlert,\n  Form,\n} from \"./forget-password.styles\";\nimport { Input, Button, Spinner } from \"@chakra-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport { auth } from \"../../firebase/firebase.utils\";\nimport { useToast } from \"@chakra-ui/core\";\nimport { Col } from \"react-bootstrap\";\nimport {\n  Alert,\n  AlertIcon,\n  AlertTitle,\n  AlertDescription,\n  CloseButton,\n} from \"@chakra-ui/core\";\nimport { Link } from \"react-router-dom\";\nconst ForgetPassword = () => {\n  const { handleSubmit, register, errors, data, getValues } = useForm();\n\n  const value = getValues();\n\n  const initialRef = useRef();\n\n  const toast = useToast();\n\n  const [error, setError] = useState(\"\");\n\n  const [loading, setLoading] = useState(false);\n\n  const [massage, setMassage] = useState(\"\");\n\n  const [info, setInfo] = useState({ email: \"\" });\n\n  const [flagButton, setFlagButton] = useState(true);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target.value;\n    setInfo({ ...info, [name]: value });\n  };\n  const { email } = info;\n\n  const onSubmit = async (data) => {\n    const { email, password } = data;\n    try {\n      setError(\"\");\n      setLoading(true);\n      setFlagButton(false);\n      await auth.sendPasswordResetEmail(initialRef.current.value);\n      setMassage(\"please check your email for further instructions ☺\");\n    } catch (error) {\n      console.log(error, `this an error`);\n      setError(\"Failed to reset Password\");\n      toast({\n        title: \"Error\",\n        description: `${error}`,\n        status: \"error\",\n        duration: 9000,\n        isClosable: true,\n        position: \"bottom-right\",\n      });\n    }\n    setLoading(false);\n    setFlagButton(true);\n  };\n  return (\n    <Container className=\"container\">\n      <div className=\"\">\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <Title>Get in Touch</Title>\n          <RapperdAlert>\n            {error && (\n              <Alert\n                status=\"error\"\n                className=\"alert\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                textAlign=\"center\"\n              >\n                <AlertIcon />\n                <AlertTitle mr={2}>ERROR!</AlertTitle>\n                <AlertDescription>{error || error.massage}</AlertDescription>\n              </Alert>\n            )}\n\n            {massage && (\n              <Alert\n                status=\"success\"\n                className=\"alert\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                textAlign=\"center\"\n              >\n                <AlertIcon />\n                Check Your Mail\n              </Alert>\n            )}\n          </RapperdAlert>\n\n          <RapperdInput>\n            <div className=\"row\">\n              <Col className=\"col\" xs={12} lg={12} md={12}>\n                <INPUT\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"your email please\"\n                  ref={initialRef}\n                  onChange={handleChange}\n                  isRequired\n                />\n              </Col>\n            </div>\n          </RapperdInput>\n          <ButtonSubmit size=\"sm\" variantColor=\"blue\" type=\"submit\">\n            {!flagButton ? <Spinner /> : \"Confirm\"}\n          </ButtonSubmit>\n        </Form>\n        <LinkForSignInSignUp to=\"/login\">Login || Register</LinkForSignInSignUp>\n      </div>\n    </Container>\n  );\n};\n\nexport default ForgetPassword;\n","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\footer\\footer.component.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\signin-signup\\signin-signup.component.jsx",["477","478","479","480","481","482","483"],"import { Fragment, useState } from \"react\";\nimport {\n  RapperColor,\n  RapperdCol,\n  Color,\n  LINK,\n  COLL,\n} from \"./signin-signup.styles\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Signin from \"../../components/sign-in/sign-in.component\";\nimport Signup from \"../../components/sign-up/sign-up.component\";\nimport NavGuest from \"../../components/nav-guest/navGuest.component\";\nconst SigninSignup = () => {\n  const [download, setDownload] = useState(0);\n  const [save, setSave] = useState(0);\n\n  return (\n    <Fragment>\n      <RapperColor className=\"container-fluid\">\n        <NavGuest />\n      </RapperColor>\n      <Color>\n        <Container>\n          <Row>\n            <Col xs={12} md={6} lg={6}>\n              <Signin />\n            </Col>\n            <Col xs={12} md={6} lg={6}>\n              <Signup />\n            </Col>\n          </Row>\n          <Row>\n            <Col xs={6} md={0} lg={8}></Col>\n            <Col xs={6} md={0} lg={4}></Col>\n          </Row>\n        </Container>\n      </Color>\n    </Fragment>\n  );\n};\n\nexport default SigninSignup;\n","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\privacy\\privacy.component.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\lang\\lang.component.jsx",["484"],"import { Fragment, useState } from \"react\";\n\nimport { RapperColor, Content, UL, Li, H5 } from \"./lang.styles\";\nimport NavGuest from \"../../components/nav-guest/navGuest.component\";\nconst Lang = () => {\n  const [languages, setLanguages] = useState([\n    { lang: \"English\", author: \"Boyko\" },\n    { lang: \"العربية\", author: \"Badr Alharbi \" },\n    { lang: \"Български\", author: \"Stan Filipcik (@murdochay), Jan Chudoba\" },\n    { lang: \"Čeština\", author: \"Thomas Jensen\" },\n    { lang: \"Dansk\", author: \"Akaki Peikrishvili (@PeikrishviliGE)\" },\n    { lang: \"Deutsch\", author: \"Eric Ericson (@idleherb)\" },\n    { lang: \"Eesti\", author: \"Bas van Dijk\" },\n    { lang: \"keel\", author: \"Alexandr Burdiyan\" },\n    { lang: \"ქართული\", author: \"Aleksandr Oleshko\" },\n    { lang: \"Dutch\", author: \"Aliakbar Majidi (majidi.info)\" },\n    {\n      lang: \"Español\",\n      author: \"Amélie Coulombe, Samy Dindane (samy.dindane.com)\",\n    },\n    { lang: \"فارسی\", author: \"Xesús M. Mosquera Carregal (@xesusmmc)\" },\n    { lang: \"Français\", author: \"Christos Vlachos (blaxosxr.gr)\" },\n    { lang: \"Galician\", author: \"Marko Knezevic\" },\n    { lang: \"Έλληνικά\", author: \"Bálint Vass\" },\n    {\n      lang: \"Hungarian\",\n      author: \"Giulio Fronterotta (Italian Developer, Milano)\",\n    },\n    { lang: \"Italiano\", author: \"Nehemia Harel\" },\n    { lang: \"עברית\", author: \"Keedi Kim (@keedi)\" },\n    { lang: \"한국어\", author: \"Kristian\" },\n    { lang: \"Norsk\", author: \"Ludwik Trammer (ludwik.trammer.pl)\" },\n    { lang: \"Polski\", author: \"Afraneo Galan (lemonblue.com.br)\" },\n    { lang: \"Português\", author: \"Minacio (minacio.pt)\" },\n    { lang: \"Român\", author: \"Valentin Goia\" },\n    { lang: \"Pусский\", author: \"Alex Shiyanov, Alexandr Burdiyan\" },\n    { lang: \"Slovenščina\", author: \"Andraž Radovan (LinkedIn)\" },\n    { lang: \"Slovenský\", author: \"Jarka Dubasova\" },\n    { lang: \"Shqip\", author: \"Jantso Porali (@JantsoPorali)\" },\n    { lang: \"Suomi\", author: \"Johannes Andersson (thejoltjoker.com)\" },\n    { lang: \"Svenska\", author: \"Genti Ereqi (gentiereqi.com)\" },\n    { lang: \"Türkçe\", author: \"Doğancan Özturan (dogancan.org)\" },\n    { lang: \"Українська\", author: \"Українська\" },\n    { lang: \"Tiếng-Se Nguyen\", author: \"Se Nguyen \" },\n    { lang: \"Việt\", author: \"Radovan Genti\" },\n    { lang: \"മലയാളം\", author: \"Kailash Nadh (nadh.in)\" },\n    { lang: \"中文\", author: \"Tiger Zhang (zhangtai.me)\" },\n    { lang: \"繁體中文\", author: \"Caton Chong\" },\n    { lang: \"Hrvatski\", author: \"Marko Knezevic\" },\n  ]);\n  return (\n    <Fragment>\n      <NavGuest />\n      <RapperColor>\n        <div className=\"container\">\n          <Content>\n            <H5>Language credits</H5>\n            <UL>\n              {languages.map((Singlelang, i) => (\n                <Fragment key={i}>\n                  <Li>{Singlelang.lang}</Li>\n                  <span>{Singlelang.author}</span>\n                  <hr />\n                </Fragment>\n              ))}\n            </UL>\n          </Content>\n        </div>\n      </RapperColor>\n    </Fragment>\n  );\n};\n\nexport default Lang;\n","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\old-cv\\old-cv.component.jsx",["485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport { Fragment, useEffect, useState, useRef, useCallback } from \"react\";\nimport {\n  ButtonForPremium,\n  Content,\n  Green,\n  H2,\n  Icon,\n  RapperdColor,\n  Small,\n  Span,\n  Strong,\n  Title,\n  ButtonforcreateCv,\n  Linkcv,\n  Iconedit,\n  ButtonForDeleteCv,\n  IconCalendar,\n} from \"./old-cv.styles\";\nimport { Col } from \"react-bootstrap\";\nimport {\n  Accordion,\n  AccordionHeader,\n  AccordionItem,\n  AccordionPanel,\n  Box,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Text,\n} from \"@chakra-ui/core\";\nimport Table from \"react-bootstrap/Table\";\nimport { Redirect, Route, useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Moment from \"react-moment\";\nimport { Spinner, useToast, useDisclosure, Button } from \"@chakra-ui/core\";\nimport NavGuest from \"../../components/nav-guest/navGuest.component\";\nimport {\n  Get_oldCv,\n  Delete_Single_CV,\n  DoRefreshLastModified,\n} from \"../../redux/oldcv/oldcvAction\";\nimport { CreateNewCv } from \"../../redux/createnewcv/createnewcvAction\";\nimport ModalDeletedOldCv from \"./deleteModal\";\nimport AccordionComponent from \"./accordion\";\nconst OldCv = ({\n  currentUser,\n  match,\n  Get_oldCv,\n  OldCvForUsers = [],\n  Delete_Single_CV,\n  DoRefreshLastModified,\n  CreateNewCv,\n}) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const toast = useToast();\n\n  const [loading, setLoading] = useState(true);\n\n  const history = useHistory();\n\n  let { id } = match.params;\n\n  let btnRef = useRef();\n\n  const createAnewCv = async () => {\n    await CreateNewCv(currentUser, history, toast);\n    if (btnRef.current) {\n      btnRef.current.setAttribute(\"disabled\", \"disabled\");\n    }\n  };\n\n  useEffect(() => {\n    if (!currentUser) {\n      return;\n    }\n    Get_oldCv(currentUser);\n    setTimeout(() => {\n      if (OldCvForUsers && Array.isArray(OldCvForUsers)) {\n        setLoading(false);\n      }\n    }, 250);\n  }, [Get_oldCv, currentUser]);\n\n  const Refresh = async (currentUser, id) => {\n    await DoRefreshLastModified(currentUser, id);\n  };\n\n  const RenderTHeaderForTable = () => {\n    let headerElement = [\"Name\", \"Create At\", \"Last Modified\", \"Options\"];\n    return headerElement.map((key, index) => {\n      return <th key={index}>{key.toUpperCase()}</th>;\n    });\n  };\n\n  const [cv, setCv] = useState({\n    id: \"\",\n    label: \"\",\n    createdAt: \"\",\n    lastModified: \"\",\n    userId: \"\",\n  });\n\n  const selecting = (selecting) => {\n    setCv({\n      ...cv,\n      id: selecting.id,\n      label: selecting.label,\n      createdAt: selecting.createdAt,\n      lastModified: selecting.lastModified,\n      userId: currentUser,\n    });\n  };\n\n  const RenderTBodyForTable = () => {\n    return OldCvForUsers.map((singleCv) => {\n      return (\n        <tr key={id}>\n          <td>\n            {singleCv.label}\n            <ButtonForDeleteCv\n              onClick={() => {\n                onOpen();\n                selecting(singleCv);\n              }}\n            >\n              delete\n              <Icon />\n            </ButtonForDeleteCv>\n            <>\n              <ModalDeletedOldCv\n                isOpen={isOpen}\n                onClose={onClose}\n                Delete_Single_CV={Delete_Single_CV}\n                cv={cv}\n                toast={toast}\n              />\n            </>\n          </td>\n          <td>\n            <Moment format=\"MMMM Do YYYY, h:mm a\">{singleCv.createdAt}</Moment>\n            <IconCalendar />\n          </td>\n          <td>\n            <Moment format=\"MMMM Do YYYY, h:mm a\">\n              {singleCv.lastModified}\n            </Moment>\n            <IconCalendar />\n          </td>\n          <td>\n            <Linkcv\n              to={`create-cv/` + `${singleCv.id}`}\n              onClick={() => Refresh(currentUser, singleCv.id)}\n            >\n              Edit now\n              <Iconedit />\n            </Linkcv>\n          </td>\n        </tr>\n      );\n    });\n  };\n\n  let [flagHide, setFlagHide] = useState(true);\n  const HandleAcordionChange = () => {\n    setFlagHide(!flagHide);\n  };\n  return (\n    <Fragment>\n      <NavGuest />\n      <RapperdColor className=\"container-fluid\">\n        <Content className=\"container\">\n          <Title>Your CVs</Title>\n          <ButtonforcreateCv onClick={createAnewCv} ref={btnRef}>\n            Create a new CV\n          </ButtonforcreateCv>\n        </Content>\n        <div className=\"container\">\n          <Table striped bordered hover size=\"xs\" responsive>\n            <thead>\n              <tr>{RenderTHeaderForTable()}</tr>\n            </thead>\n            <tbody>\n              {!loading ? (\n                RenderTBodyForTable()\n              ) : (\n                <tr className=\"text-center\">\n                  <td>\n                    <span>Loading ...</span>\n                    <Spinner\n                      thickness=\"10px\"\n                      speed=\"0.65s\"\n                      emptyColor=\"gray.200\"\n                      color=\"blue.200\"\n                      size=\"sm\"\n                    />\n                  </td>\n                  <td>\n                    <span>Loading ...</span>\n                    <Spinner\n                      thickness=\"10px\"\n                      speed=\"0.65s\"\n                      emptyColor=\"gray.200\"\n                      color=\"blue.200\"\n                      size=\"sm\"\n                    />\n                  </td>\n                  <td>\n                    <span>Loading ...</span>\n                    <Spinner\n                      thickness=\"10px\"\n                      speed=\"0.65s\"\n                      emptyColor=\"gray.200\"\n                      color=\"blue.200\"\n                      size=\"sm\"\n                    />\n                  </td>\n                  <td>\n                    <span>Loading ...</span>\n                    <Spinner\n                      thickness=\"10px\"\n                      speed=\"0.65s\"\n                      emptyColor=\"gray.200\"\n                      color=\"blue.200\"\n                      size=\"sm\"\n                    />\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n          <div className=\"container\">\n            <AccordionComponent\n              HandleAcordionChange={HandleAcordionChange}\n              flagHide={flagHide}\n            />\n          </div>\n        </div>\n      </RapperdColor>\n    </Fragment>\n  );\n};\nconst PrivateRoute = ({ component: Component, currentUser, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      currentUser != null ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{ pathname: \"/login\", state: { from: props.location } }}\n        />\n      )\n    }\n  />\n);\nconst mapStateToProps = (state) => ({\n  currentUser: state.user.currentUser,\n  OldCvForUsers: state.allOldCv.oldCv,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  Get_oldCv: (currentUser) => dispatch(Get_oldCv(currentUser)),\n  Delete_Single_CV: (cv, onClose, toast) =>\n    dispatch(Delete_Single_CV(cv, onClose, toast)),\n  DoRefreshLastModified: (currentUser, id) =>\n    dispatch(DoRefreshLastModified(currentUser, id)),\n  CreateNewCv: (currentUser, history, toast) =>\n    dispatch(CreateNewCv(currentUser, history, toast)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OldCv);\n","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\help\\help.component.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\contact\\contact.component.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\tips\\tip.component.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\notfound\\notfound.component.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\user\\userReducer.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\createcv.component.jsx",["509","510","511","512","513","514","515","516","517","518","519","520","521"],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\education\\educationReducer.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\addtolist\\addtolistReducer.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\oldcv\\oldcvReducer.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\qualifications\\qualificationsReducer.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\references\\referencesReducer.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\createnewcv\\createnewcvReducer.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\newckeditor\\newckeditorReducer.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\interests\\interestsReducer.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\basicinfo\\basicinfoReducer.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\workexperince\\workexperinceReducer.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\allsections\\allsectionsReducer.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\user\\userType.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\createnewcv\\createnewcvAction.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\oldcv\\oldcvAction.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\contact\\contact.styles.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\tips\\tips.styles.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\help\\help.styles.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\old-cv\\accordion.jsx",["522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538"],"import {\n  ButtonForPremium,\n  Content,\n  Green,\n  H2,\n  Icon,\n  RapperdColor,\n  Small,\n  Span,\n  Strong,\n  Title,\n  ButtonforcreateCv,\n  Linkcv,\n  Iconedit,\n  ButtonForDeleteCv,\n  IconCalendar,\n} from \"./old-cv.styles\";\nimport {\n  Accordion,\n  AccordionHeader,\n  AccordionItem,\n  AccordionPanel,\n  Box,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Text,\n} from \"@chakra-ui/core\";\nimport { Col } from \"react-bootstrap\";\n\nconst AccordionComponent = (props) => {\n  const { HandleAcordionChange, flagHide } = props;\n  return (\n    <>\n      <Accordion defaultIndex={[0]} allowToggle>\n        <AccordionItem className=\"AccordionItem\" onClick={HandleAcordionChange}>\n          <AccordionHeader _expanded={{ bg: \"gray\", color: \"darkgray\" }}>\n            <Box flex=\"1\" textAlign=\"left\">\n              <h1>\n                Go <Strong>Premium </Strong> ❤\n              </h1>\n              <Span>{!flagHide ? \"Show details ★\" : \"Hide details ★\"}</Span>\n            </Box>\n          </AccordionHeader>\n          <AccordionPanel pb={4}>\n            CV Creator is absolutely FREE with no restrictions, but you can get\n            a lot more out of it and support its continued development by going\n            premium for a nominal annual subscription fee.\n            <div className=\"container\">\n              <div className=\"row\">\n                <Col xs={12} lg={6} md={6} className=\"center-item\">\n                  <H2> Free</H2>\n                  <Small>Basic templates</Small>\n                  <Small>Add custom plain sections to your CV</Small>\n                  <Small>Basic rich text editor</Small>\n                  <Small>$0</Small>\n                </Col>\n                <Col xs={12} lg={6} md={6}>\n                  <H2> Premium</H2>\n                  <Small>\n                    <Green>★</Green>\n                    Premium templates in addition to the free ones\n                  </Small>\n                  <Small>\n                    <Green>★</Green>\n                    Add custom plain and special sections (similar to education\n                    and work) to your CV\n                  </Small>\n                  <Small>\n                    <Green>★</Green>\n                    Advanced rich text editor. Choose fonts, text colors and\n                    more\n                  </Small>\n                  <Small>\n                    <Green>★</Green>\n                    One-click e-mail. Send your resume directly to your e-mail\n                    easily from your mobile or tablet that doesn't allow file\n                    downloads\n                  </Small>\n                  <Small>\n                    <Green>★</Green>\n                    Continued access to upcoming premium features and templates\n                  </Small>\n                  <Small>$16 / year</Small>\n                  <div className=\"container text-center center-item\">\n                    <ButtonForPremium>Upgrade to Premium ♥</ButtonForPremium>\n                    <img src=\"paypal.png\" alt=\"\" className=\"imgpaypal\" />\n                  </div>\n                </Col>\n              </div>\n            </div>\n          </AccordionPanel>\n        </AccordionItem>\n      </Accordion>\n    </>\n  );\n};\nexport default AccordionComponent;\n","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\old-cv\\deleteModal.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\old-cv\\old-cv.styles.jsx",["539"],"import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { BiCog } from \"react-icons/bi\";\nimport { Button } from \"react-bootstrap\";\nimport { BsFillBucketFill } from \"react-icons/bs\";\nimport { BsCalendar } from \"react-icons/bs\";\nimport { FcAlarmClock } from \"react-icons/fc\";\nimport { AiTwotoneEdit } from \"react-icons/ai\";\nexport const IconCalendar = styled(FcAlarmClock)`\n  margin: 10px;\n  display: inline;\n`;\n\nexport const RapperdColor = styled.div`\n  background-color: #f9f9f9;\n  color: black;\n  height: auto;\n  padding-bottom: 25px;\n  margin: 0 auto;\n`;\n\nexport const Content = styled.div`\n  margin-bottom: 30px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 25px;\n  margin: 5px;\n  padding: 10px 10px 0px 0px;\n`;\n\nexport const ButtonforcreateCv = styled(Button)`\n  border-radius: 15px;\n  background-color: #18c7e1;\n  color: black;\n  font-size: 13px;\n  padding: 3px;\n  line-height: revert;\n  height: 28px;\n  width: 150px;\n  margin-top: 10px;\n  text-decoration: none;\n  &:hover {\n    background-color: black;\n    color: white;\n    text-decoration: none;\n  }\n`;\n\nexport const Strong = styled.strong`\n  color: green;\n`;\n\nexport const Icon = styled(BsFillBucketFill)`\n  margin: 4.5px;\n  width: 13px;\n  color: whie;\n`;\n\nexport const Span = styled.small`\n  float: right;\n  display: flex;\n  color: black;\n  text-align: center;\n  background-color: sunrose;\n`;\n\nexport const ButtonForDeleteCv = styled.button`\n  float: right;\n  display: flex;\n  color: white;\n  background-color: gray;\n  display: flex-inline;\n  padding: 3px;\n  border-radius: 3px;\n\n  &:hover {\n    color: white;\n    background-color: darkred;\n  }\n`;\n\nexport const H2 = styled.h2`\n  margin-bottom: 30px;\n  font-size: 28px;\n  line-height: 24px;\n  font-weight: 300;\n  margin-top: 20px;\n`;\n\nexport const Small = styled.small`\n  border-bottom: 1px solid darkgrey;\n  font-size: 15px;\n  width: 100%;\n  display: flex;\n  min-height: 25px;\n  margin-top: 10px;\n  margin: 1px;\n  padding: 10px;\n`;\n\nexport const Green = styled.div`\n  color: green;\n  margin: 1px;\n  width: 15px;\n`;\n\nexport const ButtonForPremium = styled.button`\n  background-color: #37c871;\n  font-size: 15px;\n  padding: 6px;\n  margin: 0 auto;\n  height: 0 auto;\n  color: white;\n  margin-top: 20px;\n  &:hover {\n    color: white;\n  }\n`;\n\nexport const Linkcv = styled(Link)`\n  color: orange;\n  text-align: center;\n`;\nexport const Iconedit = styled(BiCog)`\n  display: inline;\n  margin: 2px;\n  color: orange;\n`;\n\nexport const Td = styled.td`\n  text-align: center;\n`;\nexport const RapperTable = styled.div``;\n\nexport const SectionforLastModified = styled.span`\n  float: right;\n  margin: 0 auto;\n`;\n\nexport const SectionforCreatedAt = styled.span`\n  float: left;\n  text-align: center;\n  margin: 0 auto;\n`;\n\nexport const IconEditNameOfSection = styled(AiTwotoneEdit)``;\n","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\allsections\\allsectionsType.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\basicinfo\\basicinfoType.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\interests\\interestsType.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\workexperince\\workexperinceType.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\newckeditor\\newckeditorType.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\createnewcv\\createnewcvType.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\references\\referencesType.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\qualifications\\qualificationsType.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\oldcv\\oldcvType.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\addtolist\\addtolistType.js",["540"],"import AddToListReducer from \"./addtolistReducer\";\r\n\r\nconst AddtoListActionType = {\r\n  ADD_TO_LIST: \"ADD_TO_LIST\",\r\n};\r\n\r\nexport default AddtoListActionType;\r\n","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\education\\educationType.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\nav-guest\\navGuest.component.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\lang\\lang.styles.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\allsections\\allsectionsAction.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\checkbox.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\lib\\addckeditor.jsx",["541","542","543","544","545","546"],"import { useState, Fragment, useEffect, useRef, useLayoutEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport { Small } from \"./styles\";\nimport { useForm } from \"react-hook-form\";\nimport { Spinner, Input, Button, useToast } from \"@chakra-ui/core\";\nimport { connect } from \"react-redux\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Do_Submiting_newCkEditor } from \"../redux/newckeditor/newckeditorAction\";\nimport generateRandom from \"./random\";\nconst editorConfiguration = {\n  toolbar: {\n    items: [\n      \"alignment\",\n      \"bold\",\n      \"italic\",\n      \"link\",\n      \"bulletedList\",\n      \"numberedList\",\n      \"blockQuote\",\n      \"undo\",\n      \"redo\",\n    ],\n  },\n};\n\nconst AddEditor = (props) => {\n  const {\n    currentUser,\n    Do_Submiting_newCkEditor,\n    ckeditorState,\n    setCkeditorState,\n  } = props;\n\n  const { handleSubmit, register, getValues, errors } = useForm();\n\n  const toast = useToast();\n\n  const HandleCkEditorState = async (event, editor) => {\n    const data = editor.getData();\n    await setCkeditorState({ ...ckeditorState, content_new: `${data}` });\n  };\n\n  const { id } = useParams();\n\n  const createMarkup = () => {\n    return { __html: ckeditorState.content_new };\n  };\n\n  const [flagButton, setFlagButton] = useState(true);\n\n  const value = getValues();\n\n  const onSubmit = async (value, data) => {\n    if (!currentUser && id) {\n      return;\n    }\n\n    console.log(data, `data OnSubmit`);\n\n    let dataToBeSaved = {\n      concept: ckeditorState.concept,\n      content_new: ckeditorState.content_new || \"\",\n      type: ckeditorState.type || \"entry\",\n      identiferId: generateRandom() || \"\",\n    };\n\n    console.log(dataToBeSaved, `dataToBeSaved while Sending data`);\n\n    await Do_Submiting_newCkEditor(currentUser, id, dataToBeSaved, toast);\n\n    setFlagButton(false);\n\n    setTimeout(() => {\n      setFlagButton(true);\n    }, 2000);\n  };\n\n  return (\n    <Fragment>\n      <Container>\n        <Row bsPrefix=\"d-none d-md-block d-lg-block  d-xl-block center-item\">\n          <Col className=\"text-center\">\n            <Small>\n              If you leave the fields in a section empty, the section will not\n              appear in your CV\n            </Small>\n          </Col>\n        </Row>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          {/*    <h1>{\"\" || state.concept}</h1> */}\n          <CKEditor\n            refVal={register({ required: true })}\n            config={editorConfiguration}\n            editor={ClassicEditor}\n            onInit={(Editor) => {}}\n            onChange={HandleCkEditorState}\n            data={ckeditorState.content_new || \"\"}\n            name=\"ckeditorState.content_new\"\n          />\n          <div dangerouslySetInnerHTML={createMarkup()} className=\"editor\" />\n          <Button\n            type=\"submit\"\n            size=\"sm\"\n            variantColor=\"blue\"\n            className=\"saveEditor\"\n          >\n            {!flagButton ? <Spinner /> : \"Save\"}\n          </Button>\n        </form>\n      </Container>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.user.currentUser,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  Do_Submiting_newCkEditor: (currentUser, id, dataToBeSaved, toast) =>\n    dispatch(Do_Submiting_newCkEditor(currentUser, id, dataToBeSaved, toast)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddEditor);\n","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\radiobox.jsx",["547"],"import React, { useState } from \"react\";\r\nimport generateRandom from \"../../lib/random\";\r\nimport \"./styles.scss\";\r\nconst InputRadioBox = ({\r\n  refVal,\r\n  name,\r\n  labelText = null,\r\n  errors = {},\r\n  options,\r\n  hint = null,\r\n  value,\r\n  disabled,\r\n}) => {\r\n  const htmlId = generateRandom();\r\n\r\n  const [isChecked, setIsChecked] = useState(value);\r\n  const handleChange = () => {\r\n    setIsChecked(!isChecked);\r\n  };\r\n\r\n  return (\r\n    <div className=\"padding-xs\">\r\n      {options ? (\r\n        <>\r\n          <div className=\"pretty p-default p-round p-thick\">\r\n            {!name ? \"missing name\" : null}\r\n            <input\r\n              type=\"radio\"\r\n              name={name}\r\n              disabled={disabled}\r\n              value={options.value}\r\n              checked={isChecked}\r\n              onChange={handleChange}\r\n              ref={refVal}\r\n              id={`${htmlId}checkbox-1`}\r\n            />\r\n            <div className=\"state p-info-o\">\r\n              <label className=\"\" htmlFor={`${htmlId}checkbox-1`}>\r\n                {options.label}\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div>{hint ? <small className=\"m-l-lg\">{hint}</small> : null}</div>\r\n        </>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputRadioBox;\r\n","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\interests\\interests.component.jsx",["548","549","550","551","552","553","554"],"import { useState, useEffect } from \"react\";\nimport { Title, Small } from \"./interests.styles\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport { useForm } from \"react-hook-form\";\nimport { Button, Spinner, useToast } from \"@chakra-ui/core\";\nimport { firestore } from \"../../../firebase/firebase.utils\";\nimport { useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Get_Interest } from \"../../../redux/interests/interestsAction\";\nconst editorConfiguration = {\n  toolbar: {\n    items: [\n      \"bold\",\n      \"italic\",\n      \"link\",\n      \"bulletedList\",\n      \"numberedList\",\n      \"blockQuote\",\n      \"undo\",\n      \"redo\",\n    ],\n  },\n};\nconst Interests = ({ currentUser, Get_Interest }) => {\n  const [state, setState] = useState({\n    concept: \"Interests\",\n    content_intersets: \"\",\n    type: \"interests\",\n  });\n\n  const { concept, content_intersets, type } = state;\n\n  const { handleSubmit, register, getValues, errors, data } = useForm();\n\n  const toast = useToast();\n\n  const value = getValues();\n\n  const [loading, setLoading] = useState(true);\n\n  const [flagButton, setFlagButton] = useState(true);\n\n  const { id } = useParams();\n\n  const HandleCkEditorState = (event, editor) => {\n    const data = editor.getData();\n    setState({ content_intersets: data });\n  };\n\n  const createMarkup = () => {\n    return { __html: state.content_intersets };\n  };\n\n  const onSubmit = async () => {\n    const info = state.content_intersets;\n\n    if (!currentUser.id) {\n      return;\n    }\n    const SecRef = firestore.doc(\n      `users/${currentUser.id}/cvs/${id}/data/Interests`\n    );\n    let dataToBeSaved = {\n      concept: state.concept || \"Interests\",\n      content_intersets: info || \"\",\n      type: state.type || \"interests\",\n    };\n\n    await SecRef.set(dataToBeSaved);\n    setLoading(false);\n    setTimeout(() => {\n      toast({\n        title: \"Section Updated.\",\n        description: `Your new Section  name is : Interests`,\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }, 2000);\n    setFlagButton(false);\n    setTimeout(() => {\n      setFlagButton(true);\n    }, 2000);\n  };\n\n  useEffect(() => {\n    if (!currentUser) {\n      return;\n    }\n    firestore\n      .doc(`users/${currentUser.id}`)\n      .collection(`cvs/${id}/data`)\n      .doc(`Interests`)\n      .get()\n      .then(function (querySnapshot) {\n        const newData = querySnapshot.data();\n        if (newData) {\n          setState({\n            content_intersets: newData.content_intersets,\n          });\n          //  console.log(newData, `newData`);\n        }\n        setLoading(false);\n        //        setFlagButton(false)\n      })\n      .catch((error) => {\n        setLoading(false);\n        console.error(error, `there is was an error`);\n        console.log(error, `there is was an error`);\n      });\n  }, [currentUser, id]);\n\n  useEffect(() => {\n    if (!currentUser) {\n      return;\n    }\n    Get_Interest(currentUser, id);\n  }, [Get_Interest, id, currentUser]);\n\n  return (\n    <Container>\n      <Row bsPrefix=\"d-none d-md-block d-lg-block  d-xl-block center-item\">\n        <Col className=\"text-center\">\n          <Small>\n            If you leave the fields in a section empty, the section will not\n            appear in your CV\n          </Small>\n        </Col>\n      </Row>\n\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Title> Interests </Title>\n        <CKEditor\n          config={editorConfiguration}\n          editor={ClassicEditor}\n          refVal={register({ required: true })}\n          name={state.content_intersets}\n          onInit={(editor) => {}}\n          onChange={HandleCkEditorState}\n          data={state.content_intersets || \"\"}\n          Required\n        />\n        <div dangerouslySetInnerHTML={createMarkup()} className=\"editor\"></div>\n        <Button\n          type=\"submit\"\n          size=\"sm\"\n          variantColor=\"blue\"\n          className=\"saveEditor\"\n        >\n          {!flagButton ? <Spinner /> : \"Save\"}\n        </Button>\n      </form>\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.user.currentUser,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  Get_Interest: (currentUser, id) => dispatch(Get_Interest(currentUser, id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Interests);\n","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\qualifications\\qualifications.component.jsx",["555","556","557","558","559","560","561","562","563"],"import { useState, useEffect } from \"react\";\nimport { Title, Small } from \"./qualifications.styles\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport { useForm } from \"react-hook-form\";\nimport { Button, Spinner, useToast } from \"@chakra-ui/core\";\nimport { firestore } from \"../../../firebase/firebase.utils\";\nimport { useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Get_Qualifications } from \"../../../redux/qualifications/qualificationsAction\";\n\nconst editorConfiguration = {\n  toolbar: {\n    items: [\n      \"bold\",\n      \"italic\",\n      \"link\",\n      \"bulletedList\",\n      \"numberedList\",\n      \"blockQuote\",\n      \"undo\",\n      \"redo\",\n    ],\n  },\n};\n\nconst Qualifications = ({ currentUser, Get_Qualifications }) => {\n  useEffect(() => {\n    if (!currentUser) {\n      return;\n    }\n    Get_Qualifications(currentUser, id);\n  }, [Get_Qualifications]);\n\n  const [state, setState] = useState({\n    concept: \"Qualifications\",\n    content_Qualifications: \"\",\n    type: \"qualifications\",\n  });\n\n  const { concept, content_Qualifications, type } = state;\n\n  const { handleSubmit, register, getValues, errors, data } = useForm();\n\n  const toast = useToast();\n\n  const value = getValues();\n\n  const [loading, setLoading] = useState(true);\n\n  const [flagButton, setFlagButton] = useState(true);\n\n  const { id } = useParams();\n\n  const HandleCkEditorState = (event, editor) => {\n    const data = editor.getData();\n    setState({ content_Qualifications: data });\n  };\n\n  const createMarkup = () => {\n    return { __html: state.content_Qualifications };\n  };\n\n  const onSubmit = async () => {\n    const info = state.content_Qualifications;\n\n    if (!currentUser.id) {\n      return;\n    }\n\n    const SecRef = firestore.doc(\n      `users/${currentUser.id}/cvs/${id}/data/Qualifications`\n    );\n\n    let dataToBeSaved = {\n      concept: state.concept || \"Qualifications\",\n      content_Qualifications: info || \"\",\n      type: state.type || \"qualifications\",\n    };\n\n    await SecRef.set(dataToBeSaved);\n    setLoading(false);\n\n    setTimeout(() => {\n      toast({\n        title: \"Section Updated.\",\n        description: `Your new Section  name is : Qualifications`,\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }, 2000);\n\n    setFlagButton(false);\n\n    setTimeout(() => {\n      setFlagButton(true);\n    }, 2000);\n  };\n\n  useEffect(() => {\n    if (!currentUser) {\n      return;\n    }\n    firestore\n      .doc(`users/${currentUser.id}`)\n      .collection(`cvs/${id}/data`)\n      .doc(`Qualifications`)\n      .get()\n      .then(function (querySnapshot) {\n        const newData = querySnapshot.data();\n        if (newData) {\n          setState({\n            content_Qualifications: newData.content_Qualifications,\n          });\n          // console.log(newData, `newData`);\n        }\n        setLoading(false);\n        //        setFlagButton(false)\n      })\n      .catch((error) => {\n        setLoading(false);\n        console.error(error, `there is was an error`);\n        console.log(error, `there is was an error`);\n      });\n  }, [currentUser]);\n\n  return (\n    <Container>\n      <Row bsPrefix=\"d-none d-md-block d-lg-block  d-xl-block center-item\">\n        <Col className=\"text-center\">\n          <Small>\n            If you leave the fields in a section empty, the section will not\n            appear in your CV\n          </Small>\n        </Col>\n      </Row>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Title>Qualifications</Title>\n        <CKEditor\n          config={editorConfiguration}\n          editor={ClassicEditor}\n          refVal={register({ required: true })}\n          name={state.content_Qualifications}\n          onInit={(editor) => {}}\n          onChange={HandleCkEditorState}\n          data={state.content_Qualifications || \"\"}\n          required\n        />\n        <div dangerouslySetInnerHTML={createMarkup()} className=\"editor\"></div>\n        <Button\n          type=\"submit\"\n          size=\"sm\"\n          variantColor=\"blue\"\n          className=\"saveEditor\"\n        >\n          {!flagButton ? <Spinner /> : \"Save\"}\n        </Button>\n      </form>\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.user.currentUser,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  Get_Qualifications: (currentUser, id) =>\n    dispatch(Get_Qualifications(currentUser, id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Qualifications);\n","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\references\\references.component.jsx",["564","565","566","567","568","569","570","571"],"import { useState, useEffect } from \"react\";\nimport { Title, Small } from \"./references.styles\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport { useForm } from \"react-hook-form\";\nimport { Button, Spinner, useToast } from \"@chakra-ui/core\";\nimport { firestore } from \"../../../firebase/firebase.utils\";\nimport { useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Get_References } from \"../../../redux/references/referencesAction\";\nconst editorConfiguration = {\n  toolbar: {\n    items: [\n      \"alignment\",\n      \"bold\",\n      \"italic\",\n      \"link\",\n      \"bulletedList\",\n      \"numberedList\",\n      \"blockQuote\",\n      \"undo\",\n      \"redo\",\n    ],\n  },\n};\nconst References = ({ currentUser, Get_References }) => {\n  useEffect(() => {\n    if (!currentUser) {\n      return;\n    }\n    Get_References(currentUser, id);\n  }, [Get_References]);\n\n  const [state, setState] = useState({\n    concept: \"References\",\n    content_references: \"\",\n    type: \"references\",\n  });\n\n  const { concept, content_references, type } = state;\n\n  const { handleSubmit, register, getValues, errors, data } = useForm();\n\n  const toast = useToast();\n\n  const value = getValues();\n\n  const [loading, setLoading] = useState(true);\n\n  const [flagButton, setFlagButton] = useState(true);\n\n  const { id } = useParams();\n\n  const HandleCkEditorState = (event, editor) => {\n    const data = editor.getData();\n    setState({ content_references: data });\n  };\n\n  const createMarkup = () => {\n    return { __html: state.content_references };\n  };\n  const onSubmit = async () => {\n    const info = state.content_references;\n\n    if (!currentUser.id) {\n      return;\n    }\n    const SecRef = firestore.doc(\n      `users/${currentUser.id}/cvs/${id}/data/References`\n    );\n    let dataToBeSaved = {\n      concept: state.concept || \"References\",\n      content_references: info || \"\",\n      type: state.type || \"references\",\n    };\n\n    await SecRef.set(dataToBeSaved);\n    setLoading(false);\n    setTimeout(() => {\n      toast({\n        title: \"Section Updated.\",\n        description: `Your new Section  name is : References`,\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }, 2000);\n    setFlagButton(false);\n    setTimeout(() => {\n      setFlagButton(true);\n    }, 2000);\n  };\n\n  useEffect(() => {\n    if (!currentUser) {\n      return;\n    }\n    firestore\n      .doc(`users/${currentUser.id}`)\n      .collection(`cvs/${id}/data`)\n      .doc(`References`)\n      .get()\n      .then(function (querySnapshot) {\n        const newData = querySnapshot.data();\n        if (newData) {\n          setState({\n            content_references: newData.content_references,\n          });\n          //  console.log(newData, `newData`);\n        }\n        setLoading(false);\n        //        setFlagButton(false)\n      })\n      .catch((error) => {\n        setLoading(false);\n        console.error(error, `there is was an error`);\n        console.log(error, `there is was an error`);\n      });\n  }, [currentUser, id]);\n  return (\n    <Container>\n      <Row bsPrefix=\"d-none d-md-block d-lg-block  d-xl-block center-item\">\n        <Col className=\"text-center\">\n          <Small>\n            If you leave the fields in a section empty, the section will not\n            appear in your CV\n          </Small>\n        </Col>\n      </Row>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Title> References </Title>\n        <CKEditor\n          config={editorConfiguration}\n          editor={ClassicEditor}\n          refVal={register({ required: true })}\n          name={state.content_references}\n          onInit={(editor) => {}}\n          onChange={HandleCkEditorState}\n          data={state.content_references || \"\"}\n        />\n        <div dangerouslySetInnerHTML={createMarkup()} className=\"editor\"></div>\n        <Button\n          type=\"submit\"\n          size=\"sm\"\n          variantColor=\"blue\"\n          className=\"saveEditor\"\n        >\n          {!flagButton ? <Spinner /> : \"Save\"}\n        </Button>\n      </form>\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.user.currentUser,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  Get_References: (currentUser, id) =>\n    dispatch(Get_References(currentUser, id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(References);\n","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\workexperience\\workexperience.component.jsx",["572","573","574","575","576","577","578","579","580","581"],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\education\\education.component.jsx",["582","583"],"import { useEffect, useState, useRef } from \"react\";\nimport { useDisclosure, Spinner, useToast } from \"@chakra-ui/core\";\nimport AddEducation from \"./addEducation.component\";\nimport {\n  ButtonForEducation,\n  P,\n  Rapperd,\n  Strong,\n  StrongMobile,\n} from \"./education.styles\";\nimport { connect } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { Row, Col } from \"react-bootstrap\";\nimport {\n  GET_Education,\n  Do_Submiting_Education,\n} from \"../../../redux/education/educationAction\";\n\nconst Education = (props) => {\n  const {\n    currentUser,\n    GET_Education,\n    Do_Submiting_Education,\n    EducationState,\n  } = props;\n\n  const { id } = useParams();\n\n  const toast = useToast();\n\n  const isCurrent = useRef(true);\n\n  const [education, setEducation] = useState({\n    education: {\n      collagename: \"\",\n      startgraduationyear: \"\",\n      endgraduationyear: \"\",\n      eduactionmajor: \"\",\n      lastModified: new Date(),\n      type: \"education\",\n    },\n  });\n\n  useEffect(() => {\n    return () => {\n      isCurrent.current = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!currentUser) {\n      return;\n    }\n    GET_Education(currentUser, id, toast);\n    if (isCurrent.current) {\n      if (EducationState) {\n        setEducation({\n          collagename: EducationState.collagename,\n          startgraduationyear: EducationState.startgraduationyear,\n          endgraduationyear: EducationState.endgraduationyear,\n          eduactionmajor: EducationState.eduactionmajor,\n          lastModified: EducationState.lastModified,\n        });\n      }\n      setLoading(false);\n    }\n  }, [\n    GET_Education,\n    currentUser,\n    id,\n    toast,\n    setEducation,\n    EducationState.identiferId,\n  ]);\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const initialRef = useRef();\n\n  const finalRef = useRef();\n\n  const {\n    collagename,\n    startgraduationyear,\n    endgraduationyear,\n    eduactionmajor,\n    lastModified,\n  } = education;\n\n  const [FlagButton, setFlagButton] = useState(true);\n\n  useEffect(() => {\n    return () => {\n      setFlagButton(true);\n    };\n  }, []);\n\n  const [loading, setLoading] = useState(true);\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-5\">\n          <ButtonForEducation\n            className=\"buttonforpremium\"\n            variant=\"success\"\n            onClick={onOpen}\n          >\n            + Education\n          </ButtonForEducation>\n        </div>\n      </div>\n\n      {!loading ? (\n        <>\n          <Rapperd>\n            <Row bsPrefix=\"d-none d-md-block d-lg-block  d-xl-block center-item\">\n              <Col md={12} lg={12} xl={12} className=\"text-center\">\n                <P>\n                  CollageName: <Strong>{collagename}</Strong>\n                </P>\n                <hr />\n                <P>\n                  StartGraduationYear: <Strong>{startgraduationyear}</Strong>\n                </P>\n                <hr />\n                <P>\n                  EndGraduationYear: <Strong>{endgraduationyear}</Strong>\n                </P>\n                <hr />\n                <P>\n                  Education Majoring: <Strong>{eduactionmajor}</Strong>\n                </P>\n              </Col>\n            </Row>\n            <Row bsPrefix=\"d-block d-md-none d-lg-none d-xl-none center-item\">\n              <Col xs={12} s={12} className=\"text-center\">\n                <p>\n                  CollageName\n                  <StrongMobile>{collagename}</StrongMobile>\n                </p>\n                <hr />\n                <p>\n                  StartGraduationYear\n                  <StrongMobile>{startgraduationyear}</StrongMobile>\n                </p>\n                <hr />\n                <p>\n                  EndGraduationYear\n                  <StrongMobile>{endgraduationyear}</StrongMobile>\n                </p>\n                <hr />\n                <p>\n                  Education Majoring\n                  <StrongMobile>{eduactionmajor}</StrongMobile>\n                </p>\n              </Col>\n            </Row>\n          </Rapperd>\n        </>\n      ) : (\n        <Spinner\n          thickness=\"4px\"\n          speed=\"0.65s\"\n          emptyColor=\"gray.200\"\n          color=\"blue.500\"\n          size=\"lg\"\n        />\n      )}\n\n      <>\n        <AddEducation\n          setFlagButton={setFlagButton}\n          FlagButton={FlagButton}\n          initialRef={initialRef}\n          finalRef={finalRef}\n          isOpen={isOpen}\n          onClose={onClose}\n          Do_Submiting_Education={Do_Submiting_Education}\n          collagename={collagename}\n          startgraduationyear={startgraduationyear}\n          endgraduationyear={endgraduationyear}\n          eduactionmajor={eduactionmajor}\n          setEducation={setEducation}\n          education={education}\n          currentUser={currentUser}\n          id={id}\n          toast={toast}\n        />\n      </>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.user.currentUser,\n  EducationState: state.sectionEducation.data.education,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  GET_Education: (currentUser, id, toast) =>\n    dispatch(GET_Education(currentUser, id, toast)),\n  Do_Submiting_Education: (currentUser, id, dataToBeSaved, toast) =>\n    dispatch(Do_Submiting_Education(currentUser, id, dataToBeSaved, toast)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Education);\n","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\basicinfo\\basicinfo.component.jsx",["584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600"],"import {\r\n  useEffect,\r\n  Fragment,\r\n  useState,\r\n  useRef,\r\n  useMemo,\r\n  useCallback,\r\n} from \"react\";\r\nimport {\r\n  Input,\r\n  Label,\r\n  Containers,\r\n  H4,\r\n  IconEditNameOfSection,\r\n  ButtonForSaveBasicInfo,\r\n} from \"./basicinfo.styles\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\nimport { BsCheck } from \"react-icons/bs\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useParams, useHistory, Progress } from \"react-router-dom\";\r\nimport { Spinner, useToast } from \"@chakra-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button } from \"@chakra-ui/core\";\r\nimport { firestore, storage } from \"../../../firebase/firebase.utils\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  FormLabel,\r\n} from \"@chakra-ui/core\";\r\nimport ImageUpload from \"./uploadimage\";\r\nimport {\r\n  GetBasicInfo,\r\n  Do_Submiting_BasicInfo,\r\n} from \"../../../redux/basicinfo/basicinfoAction\";\r\nconst BasicInfo = (props) => {\r\n  const {\r\n    currentUser,\r\n    match,\r\n    doc,\r\n    info,\r\n    basicinfo,\r\n    GetBasicInfo,\r\n    basicInfoState = {},\r\n    Do_Submiting_BasicInfo,\r\n    oldId = [],\r\n  } = props;\r\n\r\n  const { id } = useParams();\r\n\r\n  const toast = useToast();\r\n\r\n  const history = useHistory();\r\n\r\n  const { handleSubmit, register, errors, getValues, data } = useForm();\r\n\r\n  const value = getValues();\r\n\r\n  const [dataform, setDataform] = useState({\r\n    basicinfo: {\r\n      title: \"\",\r\n      fullname: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      address1: \"\",\r\n      address2: \"\",\r\n      address3: \"\",\r\n      webSites: \"\",\r\n      lastModified: new Date(),\r\n    },\r\n    type: \"basicinfo\",\r\n  });\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setDataform({ ...dataform, [name]: value });\r\n  };\r\n  const [FlagButton, setFlagButton] = useState(true);\r\n\r\n  const onSubmit = async (value, data) => {\r\n    let dataToBeSaved = {\r\n      basicinfo: {\r\n        title: dataform.title || \"\",\r\n        fullname: dataform.fullname || \"\",\r\n        phone: dataform.phone || \"\",\r\n        email: dataform.email || \"\",\r\n        address1: dataform.address1 || \"\",\r\n        address2: dataform.address2 || \"\",\r\n        address3: dataform.address3 || \"\",\r\n        webSites: dataform.webSites || \"\",\r\n        lastModified: new Date(),\r\n        id,\r\n      },\r\n      type: dataform.type || \"basicinfo\",\r\n    };\r\n    await Do_Submiting_BasicInfo(currentUser, id, dataToBeSaved, toast);\r\n\r\n    setFlagButton(false);\r\n    setTimeout(() => {\r\n      setFlagButton(true);\r\n    }, 2000);\r\n  };\r\n\r\n  const isCurrent = useRef(true);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      isCurrent.current = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!currentUser) {\r\n      return;\r\n    }\r\n\r\n    GetBasicInfo(currentUser, id, toast);\r\n\r\n    // console.log(Object.keys(basicInfoState).length === 0, `Object.keys(basicInfoState).length > 10`)\r\n\r\n    if (Object.keys(basicInfoState).length === 0) {\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, 500);\r\n      setDataform({});\r\n      //  console.log(basicInfoState, `basicinfoState..>>>>>>>>>>>>>>>`);\r\n\r\n      console.log(dataform, `iam setting state with empty object {{}}`);\r\n    } else {\r\n      if (isCurrent.current) {\r\n        if (basicInfoState.id) {\r\n          setDataform({\r\n            title: basicInfoState.title,\r\n            fullname: basicInfoState.fullname,\r\n            phone: basicInfoState.phone,\r\n            address1: basicInfoState.address1,\r\n            address2: basicInfoState.address2,\r\n            address3: basicInfoState.address3,\r\n            webSites: basicInfoState.webSites,\r\n            email: basicInfoState.email,\r\n            lastModified: basicInfoState.lastModified,\r\n          });\r\n        } else {\r\n          setDataform({\r\n            basicinfo: {\r\n              title: \"\",\r\n              fullname: \"\",\r\n              phone: \"\",\r\n              email: \"\",\r\n              address1: \"\",\r\n              address2: \"\",\r\n              address3: \"\",\r\n              webSites: \"\",\r\n              lastModified: new Date(),\r\n            },\r\n            type: \"basicinfo\",\r\n          });\r\n        }\r\n        setTimeout(() => {\r\n          setLoading(false);\r\n        }, 500);\r\n      }\r\n    }\r\n  }, [GetBasicInfo, currentUser, id, basicInfoState.id]);\r\n\r\n  const [color, setColor] = useState(\"\");\r\n\r\n  const styles = {\r\n    backgroundColor: color,\r\n  };\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const initialRef = useRef();\r\n\r\n  const finalRef = useRef();\r\n\r\n  const [sectionName, setSectionName] = useState({\r\n    sectionlabel: \"\",\r\n  });\r\n\r\n  const { sectionlabel } = sectionName;\r\n\r\n  const handleChangeSectionName = (event) => {\r\n    const { name, value } = event.target;\r\n    setSectionName({ ...sectionName, [name]: value });\r\n  };\r\n\r\n  const onSubmitSectionLabel = async (value) => {\r\n    await firestore\r\n      .doc(`users/${currentUser.id}/cvs/${id}/data/Basicinfo`)\r\n      .update(\r\n        \"basicinfo.title\",\r\n        `${sectionlabel}`,\r\n        \"basicinfo.lastModified\",\r\n        new Date()\r\n      );\r\n\r\n    onClose();\r\n\r\n    toast({\r\n      title: \"section name updated.\",\r\n      description: `your SectionName updated  to : ${sectionName.sectionlabel} `,\r\n      status: \"success\",\r\n      duration: 5000,\r\n      isClosable: true,\r\n      position: \"top-right\",\r\n    });\r\n  };\r\n\r\n  /*\r\n  \r\n    const [image, setImage] = useState(null);\r\n    const [url, setUrl] = useState(\"\");\r\n    const [progress, setProgress] = useState(0);\r\n  \r\n    const handleChangeImage = (e) => {\r\n      if (e.target.files[0]) {\r\n        setImage(e.target.files[0]);\r\n      }\r\n    };\r\n    const handleUpload = () => {\r\n      const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          const progress = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n          );\r\n          setProgress(progress);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        },\r\n        () => {\r\n          storage\r\n            .ref(\"images\")\r\n            .child(image.name)\r\n            .getDownloadURL()\r\n            .then((url) => {\r\n              setUrl(url);\r\n            });\r\n        }\r\n      );\r\n    };\r\n  \r\n    //  console.log(\"image :\", image);\r\n  */\r\n\r\n  return (\r\n    <Fragment>\r\n      <Containers>\r\n        {!loading ? (\r\n          <>\r\n            <Container>\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <button\r\n                  onClick={onOpen}\r\n                  variant=\"success\"\r\n                  className=\"pull-right\"\r\n                >\r\n                  <IconEditNameOfSection />\r\n                </button>\r\n                <Row>\r\n                  <Col\r\n                    xs={12}\r\n                    s={12}\r\n                    md={12}\r\n                    lg={12}\r\n                    xl={12}\r\n                    className=\"text-center rappertitlebasicinfo\"\r\n                  >\r\n                    Title Section:\r\n                    <H4>{`${sectionName.sectionlabel}` || dataform.title}</H4>\r\n                  </Col>\r\n                </Row>\r\n                <Row\r\n                  className=\"basicinfo\"\r\n                  bsPrefix=\"d-none d-md-flex d-lg-flex  d-xl-flex center-item\"\r\n                >\r\n                  <Col md={6} lg={6} xl={6}>\r\n                    <Label>Full name</Label>\r\n                    <Input\r\n                      name=\"fullname\"\r\n                      defaultValue={\"\" || dataform.fullname}\r\n                      ref={register({ required: \"*input is required\" })}\r\n                      placeholder=\"Full Name\"\r\n                      onChange={handleChange}\r\n                      autoComplete=\"off\"\r\n                      autoCorrect=\"off\"\r\n                      autoCapitalize=\"off\"\r\n                      spellCheck=\"false\"\r\n                      tabIndex=\"1\"\r\n                    />\r\n                    <small className=\"errorSectionName\">\r\n                      {errors.fullname && errors.fullname.message}\r\n                    </small>\r\n                    <Label>Phone numbers</Label>\r\n                    <Input\r\n                      name=\"phone\"\r\n                      value={dataform.phone}\r\n                      placeholder=\"010 000 0000\"\r\n                      onChange={handleChange}\r\n                      ref={register({ required: \"*input is required\" })}\r\n                      required\r\n                      autoComplete=\"off\"\r\n                      autoCorrect=\"off\"\r\n                      autoCapitalize=\"off\"\r\n                      spellCheck=\"false\"\r\n                      tabIndex=\"2\"\r\n                    />\r\n                    <small className=\"errorSectionName\">\r\n                      {errors.phone && errors.phone.message}\r\n                    </small>\r\n                    <hr />\r\n\r\n                    <Label>Address Line 1</Label>\r\n\r\n                    <Input\r\n                      name=\"address1\"\r\n                      ref={register({ required: \"*input is required\" })}\r\n                      placeholder=\"Country\"\r\n                      value={dataform.address1}\r\n                      onChange={handleChange}\r\n                      autoComplete=\"off\"\r\n                      autoCorrect=\"off\"\r\n                      autoCapitalize=\"off\"\r\n                      spellCheck=\"false\"\r\n                      tabIndex=\"3\"\r\n                    />\r\n\r\n                    <small className=\"errorSectionName\">\r\n                      {errors.address1 && errors.address1.message}\r\n                    </small>\r\n                    <Label>Address Line 3</Label>\r\n                    <Input\r\n                      name=\"address3\"\r\n                      placeholder=\"Street\"\r\n                      ref={register()}\r\n                      value={dataform.address3}\r\n                      onChange={handleChange}\r\n                      autoComplete=\"off\"\r\n                      autoCorrect=\"off\"\r\n                      autoCapitalize=\"off\"\r\n                      spellCheck=\"false\"\r\n                      tabIndex=\"4\"\r\n                    />\r\n\r\n                    <small className=\"errorSectionName\">\r\n                      {errors.address3 && errors.address3.message}\r\n                    </small>\r\n                  </Col>\r\n                  <hr />\r\n                  <Col md={6} lg={6} xl={6}>\r\n                    <Label>E-mail address</Label>\r\n                    <Input\r\n                      name=\"email\"\r\n                      value={dataform.email}\r\n                      onChange={handleChange}\r\n                      placeholder=\"Email\"\r\n                      ref={register({ required: \"*input is required\" })}\r\n                      required\r\n                      autoComplete=\"off\"\r\n                      autoCorrect=\"off\"\r\n                      autoCapitalize=\"off\"\r\n                      spellCheck=\"false\"\r\n                      tabIndex=\"5\"\r\n                    />\r\n                    <small className=\"errorSectionName\">\r\n                      {errors.email && errors.email.message}\r\n                    </small>\r\n                    <Label>Websites</Label>\r\n                    <Input\r\n                      name=\"webSites\"\r\n                      placeholder=\"https://www.\"\r\n                      ref={register()}\r\n                      value={dataform.webSites}\r\n                      onChange={handleChange}\r\n                      autoComplete=\"off\"\r\n                      autoCorrect=\"off\"\r\n                      autoCapitalize=\"off\"\r\n                      spellCheck=\"false\"\r\n                      tabIndex=\"6\"\r\n                    />\r\n                    <small className=\"errorSectionName\">\r\n                      {errors.websites && errors.websites.message}\r\n                    </small>\r\n                    <hr />\r\n                    <Label>Address Line 2</Label>\r\n                    <Input\r\n                      name=\"address2\"\r\n                      ref={register({ required: \"*input is required\" })}\r\n                      placeholder=\"City\"\r\n                      value={dataform.address2}\r\n                      onChange={handleChange}\r\n                      autoComplete=\"off\"\r\n                      autoCorrect=\"off\"\r\n                      autoCapitalize=\"off\"\r\n                      spellCheck=\"false\"\r\n                      tabIndex=\"7\"\r\n                    />\r\n                    <small className=\"errorSectionName\">\r\n                      {errors.address2 && errors.address2.message}\r\n                    </small>\r\n                    <ButtonForSaveBasicInfo\r\n                      type=\"submit\"\r\n                      className=\"Deal\"\r\n                      size=\"sm\"\r\n                      variantColor=\"blue\"\r\n                    >\r\n                      {!FlagButton ? (\r\n                        <Spinner\r\n                          thickness=\"4px\"\r\n                          speed=\"0.65s\"\r\n                          emptyColor=\"gray.200\"\r\n                          color=\"blue.500\"\r\n                          size=\"sm\"\r\n                        />\r\n                      ) : (\r\n                        \"Save\"\r\n                      )}\r\n                    </ButtonForSaveBasicInfo>\r\n                  </Col>\r\n                  <hr />\r\n                </Row>\r\n                <Row bsPrefix=\"d-block d-md-none d-lg-none d-xl-none center-item\">\r\n                  <Col xs={12} s={12}>\r\n                    <Label>Full name</Label>\r\n                    <Input\r\n                      name=\"fullname\"\r\n                      value={dataform.fullname}\r\n                      ref={register({ required: \"*input is required\" })}\r\n                      placeholder=\"Full Name\"\r\n                      onChange={handleChange}\r\n                      autoComplete=\"off\"\r\n                      autoCorrect=\"off\"\r\n                      autoCapitalize=\"off\"\r\n                      spellCheck=\"false\"\r\n                      tabIndex=\"1\"\r\n                    />\r\n                    <small className=\"errorSectionName\">\r\n                      {errors.fullname && errors.fullname.message}\r\n                    </small>\r\n                    <Label>Phone numbers</Label>\r\n                    <Input\r\n                      name=\"phone\"\r\n                      value={dataform.phone}\r\n                      placeholder=\"010 000 0000\"\r\n                      onChange={handleChange}\r\n                      ref={register({ required: \"*input is required\" })}\r\n                      required\r\n                      autoComplete=\"off\"\r\n                      autoCorrect=\"off\"\r\n                      autoCapitalize=\"off\"\r\n                      spellCheck=\"false\"\r\n                      tabIndex=\"2\"\r\n                    />\r\n                    <small className=\"errorSectionName\">\r\n                      {errors.phone && errors.phone.message}\r\n                    </small>\r\n\r\n                    <Label>Address Line 1</Label>\r\n\r\n                    <Input\r\n                      name=\"address1\"\r\n                      ref={register({ required: \"*input is required\" })}\r\n                      placeholder=\"Country\"\r\n                      value={dataform.address1}\r\n                      onChange={handleChange}\r\n                      autoComplete=\"off\"\r\n                      autoCorrect=\"off\"\r\n                      autoCapitalize=\"off\"\r\n                      spellCheck=\"false\"\r\n                      tabIndex=\"3\"\r\n                    />\r\n\r\n                    <small className=\"errorSectionName\">\r\n                      {errors.address1 && errors.address1.message}\r\n                    </small>\r\n                    <Label>Address Line 3</Label>\r\n                    <Input\r\n                      name=\"address3\"\r\n                      placeholder=\"Street\"\r\n                      ref={register()}\r\n                      value={dataform.address3}\r\n                      onChange={handleChange}\r\n                      autoComplete=\"off\"\r\n                      autoCorrect=\"off\"\r\n                      autoCapitalize=\"off\"\r\n                      spellCheck=\"false\"\r\n                      tabIndex=\"4\"\r\n                    />\r\n\r\n                    <small className=\"errorSectionName\">\r\n                      {errors.address3 && errors.address3.message}\r\n                    </small>\r\n\r\n                    <Label>E-mail address</Label>\r\n                    <Input\r\n                      name=\"email\"\r\n                      value={dataform.email}\r\n                      onChange={handleChange}\r\n                      placeholder=\"Email\"\r\n                      ref={register({ required: \"*input is required\" })}\r\n                      required\r\n                      autoComplete=\"off\"\r\n                      autoCorrect=\"off\"\r\n                      autoCapitalize=\"off\"\r\n                      spellCheck=\"false\"\r\n                      tabIndex=\"5\"\r\n                    />\r\n                    <small className=\"errorSectionName\">\r\n                      {errors.email && errors.email.message}\r\n                    </small>\r\n                    <Label>Websites</Label>\r\n                    <Input\r\n                      name=\"webSites\"\r\n                      placeholder=\"https://www.\"\r\n                      ref={register()}\r\n                      value={dataform.webSites}\r\n                      onChange={handleChange}\r\n                      autoComplete=\"off\"\r\n                      autoCorrect=\"off\"\r\n                      autoCapitalize=\"off\"\r\n                      spellCheck=\"false\"\r\n                      tabIndex=\"6\"\r\n                    />\r\n                    <small className=\"errorSectionName\">\r\n                      {errors.websites && errors.websites.message}\r\n                    </small>\r\n                    <Label>Address Line 2</Label>\r\n                    <Input\r\n                      name=\"address2\"\r\n                      ref={register({ required: \"*input is required\" })}\r\n                      placeholder=\"City\"\r\n                      value={dataform.address2}\r\n                      onChange={handleChange}\r\n                      autoComplete=\"off\"\r\n                      autoCorrect=\"off\"\r\n                      autoCapitalize=\"off\"\r\n                      spellCheck=\"false\"\r\n                      tabIndex=\"7\"\r\n                    />\r\n                    <small className=\"errorSectionName\">\r\n                      {errors.address2 && errors.address2.message}\r\n                    </small>\r\n                    <ButtonForSaveBasicInfo\r\n                      type=\"submit\"\r\n                      className=\"Deal\"\r\n                      size=\"sm\"\r\n                      variantColor=\"blue\"\r\n                    >\r\n                      {!FlagButton ? (\r\n                        <Spinner\r\n                          thickness=\"4px\"\r\n                          speed=\"0.65s\"\r\n                          emptyColor=\"gray.200\"\r\n                          color=\"blue.500\"\r\n                          size=\"sm\"\r\n                        />\r\n                      ) : (\r\n                        \"Save\"\r\n                      )}\r\n                    </ButtonForSaveBasicInfo>\r\n                  </Col>\r\n                </Row>\r\n\r\n                {/*   <div className=\"row\">\r\n                  <Col lg={6} md={6} xs={12}>\r\n                    <Upload type=\"file\" onChange={handleChangeImage} />\r\n                    <br />\r\n                    <img\r\n                      src={url || \"http://via.placeholder.com/100\"}\r\n                      alt=\"firebase-image\"\r\n                    />\r\n                  </Col>\r\n                  <Col lg={6} md={6} xs={12} s={12}>\r\n                    <Buttons onClick={handleUpload}>Upload</Buttons>\r\n                    <br />\r\n                    <br />\r\n                    {url.length > 5 ? null : null}\r\n                  </Col>\r\n                </div>\r\n                <ImageUpload />\r\n                 */}\r\n              </form>\r\n            </Container>\r\n          </>\r\n        ) : (\r\n          <Spinner\r\n            thickness=\"4px\"\r\n            speed=\"0.65s\"\r\n            emptyColor=\"gray.200\"\r\n            color=\"blue.500\"\r\n            size=\"lg\"\r\n          />\r\n        )}\r\n\r\n        <Modal\r\n          initialFocusRef={initialRef}\r\n          finalFocusRef={finalRef}\r\n          isOpen={isOpen}\r\n          onClose={onClose}\r\n          blockScrollOnMount={true}\r\n        >\r\n          <ModalOverlay />\r\n          <ModalContent>\r\n            <ModalHeader>Edit Section Name</ModalHeader>\r\n            <ModalCloseButton />\r\n            <form onSubmit={handleSubmit(onSubmitSectionLabel)}>\r\n              <ModalBody pb={6}>\r\n                <FormLabel>Section name</FormLabel>\r\n                <Input\r\n                  placeholder=\"SectionName\"\r\n                  type=\"text\"\r\n                  name=\"sectionlabel\"\r\n                  onChange={handleChangeSectionName}\r\n                  ref={register({\r\n                    required: true,\r\n                  })}\r\n                />\r\n                <small className=\"\">\r\n                  {errors && errors.sectionlabel && (\r\n                    <label className=\"errorForEditSectionName\">\r\n                      {errors.sectionlabel.message || \"SectionName is required\"}\r\n                    </label>\r\n                  )}\r\n                </small>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button\r\n                  variantColor=\"blue\"\r\n                  mr={3}\r\n                  type=\"submit\"\r\n                  className=\"\"\r\n                  onOpen\r\n                >\r\n                  Save\r\n                </Button>\r\n                <Button onClick={onClose} className=\"\">\r\n                  Cancel\r\n                </Button>\r\n              </ModalFooter>\r\n            </form>\r\n          </ModalContent>\r\n        </Modal>\r\n      </Containers>\r\n    </Fragment>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  currentUser: state.user.currentUser,\r\n  basicInfoState: state.sectionBasicInfo.data.basicinfo,\r\n  oldId: state.allSections.section,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  GetBasicInfo: (currentUser, id, toast) =>\r\n    dispatch(GetBasicInfo(currentUser, id, toast)),\r\n  Do_Submiting_BasicInfo: (currentUser, id, dataToBeSaved, toast) =>\r\n    dispatch(Do_Submiting_BasicInfo(currentUser, id, dataToBeSaved, toast)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BasicInfo);\r\n","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\lib\\addform.jsx",["601","602"],"import { useEffect, useState, Fragment } from \"react\";\nimport { firestore } from \"../firebase/firebase.utils\";\nimport { useForm } from \"react-hook-form\";\nimport { Button } from \"@chakra-ui/core\";\nimport { useToast, Input, Textarea, Spinner } from \"@chakra-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { RapperdForm, Small } from \"./styles\";\nimport generateRandom from \"./random\";\n\nconst AddForm = (props) => {\n  const currentUser = useSelector((state) => state.user.currentUser);\n  const { array, formState, setFormState } = props;\n  const { handleSubmit, register, getValues, errors, data } = useForm();\n\n  const value = getValues();\n\n  const toast = useToast();\n\n  const { id } = useParams();\n\n  const { concept, name, start, end, description, type } = formState;\n\n  const HandleChangenewData = (event) => {\n    const { name, value } = event.target;\n    setFormState({ ...formState, [name]: value });\n  };\n\n  const [FlagButton, setFlagButton] = useState(true);\n\n  useEffect(() => {\n    setFlagButton(true);\n  }, [currentUser.id]);\n\n  const onSubmit = async (data, props) => {\n    if (!currentUser.id) {\n      return;\n    }\n\n    const SecRef = firestore.doc(\n      `users/${currentUser.id}/cvs/${id}/data/${concept}`\n    );\n\n    let dataToBeSaved = {\n      concept: concept || \"\",\n      name: name || \"\",\n      start: start || \"\",\n      end: end || \"\",\n      description: description || \"\",\n      identiferId: generateRandom(),\n      type: type || \"text\",\n    };\n\n    await SecRef.set(dataToBeSaved);\n\n    array.push({\n      section: formState.concept,\n      type: formState.type,\n      lastModified: new Date(),\n    });\n\n    setFlagButton(false);\n\n    setTimeout(() => {\n      setFlagButton(true);\n\n      toast({\n        title: \"Section Updated.\",\n        description: `Your new Section  name is : ${concept}`,\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }, 2000);\n  };\n\n  return (\n    <Fragment>\n      <div className=\"container\">\n        <Fragment>\n          <RapperdForm xs={12}>\n            <Small>\n              {\" \"}\n              If you leave the fields in a section empty, the section will not\n              appear in your CV\n            </Small>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <Input\n                ref={register({ required: true })}\n                placeholder=\"title for new Section\"\n                name=\"concept\"\n                type=\"hidden\"\n                value={concept}\n                onChange={HandleChangenewData}\n              />\n\n              <strong className=\"col-12\">\n                {errors && errors.concept && (\n                  <label className=\"error\">\n                    {errors.concept.message || \"concept is required\"}\n                  </label>\n                )}\n              </strong>\n              <Input\n                ref={register({ required: true })}\n                placeholder=\"name\"\n                name=\"name\"\n                type=\"text\"\n                value={formState.name || \"\"}\n                onChange={HandleChangenewData}\n              />\n              <strong className=\"col-12\">\n                {errors && errors.name && (\n                  <label className=\"error\">\n                    {errors.name.message || \"name is required\"}\n                  </label>\n                )}\n              </strong>\n              <Input\n                ref={register({ required: true })}\n                placeholder=\"start\"\n                name=\"start\"\n                type=\"text\"\n                value={formState.start || \"\"}\n                onChange={HandleChangenewData}\n              />\n              <strong className=\"col-12\">\n                {errors && errors.start && (\n                  <label className=\"error\">\n                    {errors.start.message || \"start is required\"}\n                  </label>\n                )}\n              </strong>\n              <Input\n                ref={register({ required: true })}\n                placeholder=\"end\"\n                name=\"end\"\n                type=\"text\"\n                value={formState.end || \"\"}\n                onChange={HandleChangenewData}\n              />\n              <strong className=\"col-12\">\n                {errors && errors.end && (\n                  <label className=\"error\">\n                    {errors.end.message || \"end is required\"}\n                  </label>\n                )}\n              </strong>\n              <Textarea\n                ref={register({ required: true })}\n                placeholder=\"description  here\"\n                type=\"textarea\"\n                name=\"description\"\n                value={formState.description || \"\"}\n                onChange={HandleChangenewData}\n              />\n              <strong className=\"col-12\">\n                {errors && errors.description && (\n                  <label className=\"error\">\n                    {errors.description.message || \"description is required\"}\n                  </label>\n                )}\n              </strong>\n              <div className=\"someThing\">\n                <Button\n                  type=\"submit\"\n                  className=\"buttonSavenewFrom\"\n                  size=\"sm\"\n                  variantColor=\"blue\"\n                >\n                  {!FlagButton ? (\n                    <Spinner\n                      thickness=\"4px\"\n                      speed=\"0.65s\"\n                      emptyColor=\"gray.200\"\n                      color=\"blue.500\"\n                      size=\"sm\"\n                    />\n                  ) : (\n                    \"Save\"\n                  )}\n                </Button>\n              </div>\n            </form>\n          </RapperdForm>\n        </Fragment>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default AddForm;\n","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\nav-guest\\navGuest.styles.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\lib\\random.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\newckeditor\\newckeditorAction.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\interests\\interestsAction.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\lib\\styles.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\qualifications\\qualificationsAction.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\references\\referencesAction.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\education\\educationAction.js",["603","604"],"import { educationActionType } from \"./educationType\";\nimport { firestore } from \"../../firebase/firebase.utils\";\n\nconst db = firestore;\n\nconst EDUCTION_START = () => ({\n  type: educationActionType.GET_EDUCATION_START,\n});\n\nconst EDUCATION_SUCCESS = (data) => ({\n  type: educationActionType.GET_EDUCATION_SUCCESS,\n  payload: data,\n});\n\nconst EDUCATION_ERROR = (errorMessage) => {\n  if (errorMessage && typeof errorMessage === \"object\") {\n    for (let key in errorMessage) {\n      if (typeof errorMessage[key] === \"object\") {\n        if (errorMessage[key][0]) {\n          console.log(errorMessage, `error from educationAction.Js`);\n        }\n      }\n    }\n  }\n  return {\n    type: educationActionType.GET_EDUCATION_ERROR,\n    payload: errorMessage,\n  };\n};\n\nexport const GET_Education = (currentUser, id, toast) => {\n  let hasError = false;\n  const url = `users/${currentUser.id}/cvs/${id}/data/Education`;\n  return (dispatch) => {\n    dispatch(EDUCTION_START());\n    db.doc(url)\n      .get()\n      .then((querySnapshot, errorMessage) => {\n        const newData = querySnapshot.data();\n\n        if (!newData) {\n          hasError = true;\n          dispatch(EDUCATION_ERROR(errorMessage));\n          console.log(errorMessage, `error from educationAction.Js`);\n        } else {\n          dispatch(EDUCATION_SUCCESS(newData));\n        }\n      })\n      .catch((errorMessage, newData) => {\n        dispatch(EDUCATION_ERROR(errorMessage));\n        console.log(errorMessage, `error from EduactionAction.JS`);\n      });\n  };\n};\n\nconst Submiting_Education_Start = () => ({\n  type: educationActionType.SUBMITING_EDUCATION_START,\n});\n\nconst Submiting_Education_Success = (data) => ({\n  type: educationActionType.SUBMITING_EDUCATION_SUCCESS,\n  payload: data,\n});\n\nconst Submiting_Education_Error = (errorMessage) => {\n  if (errorMessage && typeof errorMessage === \"object\") {\n    for (let key in errorMessage) {\n      if (typeof errorMessage[key] === \"object\") {\n        if (errorMessage[key][0]) {\n          console.log(errorMessage, `error from educationAction.Js`);\n        }\n      }\n    }\n  }\n  return {\n    type: educationActionType.SUBMITING_EDUCATION_ERROR,\n    payload: errorMessage,\n  };\n};\n\nexport const Do_Submiting_Education = (\n  currentUser,\n  id,\n  dataToBeSaved,\n  toast\n) => {\n  let hasError = false;\n  const url = `users/${currentUser.id}/cvs/${id}/data/Education`;\n  return (dispatch) => {\n    db.doc(url)\n      .set(dataToBeSaved)\n      .then((errorMessage) => {\n        if (errorMessage) {\n          hasError = true;\n          dispatch(Submiting_Education_Error(errorMessage));\n          console.log(errorMessage, `errorMessage from EdcationAction.JS`);\n        } else if (!hasError && dataToBeSaved) {\n          dispatch(Submiting_Education_Success(dataToBeSaved));\n          console.log(dataToBeSaved, `dataToBeSaved`);\n          toast({\n            title: \"Section updated.\",\n            description: `your cvs section education has been updated`,\n            status: \"success\",\n            duration: 5000,\n            isClosable: true,\n            position: \"bottom-right\",\n          });\n        } else {\n          console.log(errorMessage, `errorMessage from EdcationAction.JS`);\n        }\n      })\n      .catch((errorMessage, dataToBeSaved) => {\n        if (errorMessage && !dataToBeSaved) {\n          dispatch(Submiting_Education_Error(errorMessage));\n          console.log(errorMessage, `errorMessage from EdcationAction.JS`);\n        } else if (dataToBeSaved) {\n          dispatch(Submiting_Education_Success(dataToBeSaved));\n          console.log(dataToBeSaved, `dataToBeSaved`);\n        } else {\n          console.log(errorMessage, `errorMessage from EdcationAction.JS`);\n        }\n      });\n  };\n};\n","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\basicinfo\\basicinfoAction.js",["605"],"import { basicInfoActionType } from \"./basicinfoType\";\n\nimport { firestore } from \"../../firebase/firebase.utils\";\n\nconst db = firestore;\n\nconst BasicInfoStart = () => ({\n  type: basicInfoActionType.GET_BASICINFO_START,\n});\n\nconst BasicInfoSuccess = (data) => ({\n  type: basicInfoActionType.GET_BASICINFO_SUCCESS,\n  payload: data,\n});\n\nconst BasicInfoError = (errorMessage) => ({\n  type: basicInfoActionType.GET_BASICINFO_ERROR,\n  payload: errorMessage,\n});\n\nexport const GetBasicInfo = (currentUser, id, toast) => {\n  let hasError = false;\n  return (dispatch) => {\n    dispatch(BasicInfoStart());\n    db.doc(`users/${currentUser.id}`)\n      .collection(`cvs/${id}/data`)\n      .doc(`Basicinfo`)\n      .get()\n      .then((querySnapshot, errorMessage) => {\n        let data = querySnapshot.data();\n        if (data) {\n          dispatch(BasicInfoSuccess(data));\n          console.log(\n            data,\n            `data.......??????????????????????????????????????`\n          );\n          console.log(`iam runder`);\n        } else {\n          dispatch(BasicInfoError(errorMessage));\n          console.log(errorMessage, `error from redux files basicinfo`);\n        }\n      })\n      .catch((errorMessage) => {\n        if (errorMessage) {\n          dispatch(BasicInfoError(errorMessage));\n          console.log(errorMessage, `error from redux files basicinfo`);\n        }\n      });\n  };\n};\n\nconst Submiting_BasicInfo_Start = () => ({\n  type: basicInfoActionType.SUBMITING_BASICINFO_START,\n});\n\nconst Submiting_BasicInfo_Success = (data) => ({\n  type: basicInfoActionType.SUBMITING_BASICINFO_SUCCESS,\n  payload: data,\n});\nconst Submiting_BasicInfo_Error = (errorMessage) => {\n  if (errorMessage && typeof errorMessage === \"object\") {\n    for (let key in errorMessage) {\n      if (typeof errorMessage[key] === \"object\") {\n        if (errorMessage[key][0]) {\n          console.log(errorMessage, `error from redux files basicinfo`);\n        }\n      }\n    }\n  }\n  return {\n    type: basicInfoActionType.SUBMITING_BASICINFO_ERROR,\n  };\n};\n\nexport const Do_Submiting_BasicInfo = (\n  currentUser,\n  id,\n  dataToBeSaved,\n  toast\n) => {\n  let hasError = false;\n  return (dispatch) => {\n    dispatch(Submiting_BasicInfo_Start());\n    db.doc(`users/${currentUser.id}`)\n      .collection(`cvs/${id}/data`)\n      .doc(`Basicinfo`)\n      .set(dataToBeSaved)\n      .then((errorMessage) => {\n        if (errorMessage) {\n          hasError = true;\n          dispatch(Submiting_BasicInfo_Error(errorMessage));\n          console.log(errorMessage, `errorMessage from BasicInfoAction.JS`);\n        } else if (!hasError) {\n          dispatch(Submiting_BasicInfo_Success(dataToBeSaved));\n          toast({\n            title: \"Section updated.\",\n            description: `your section basicinfo has been updated`,\n            status: \"success\",\n            duration: 5000,\n            isClosable: true,\n            position: \"bottom-right\",\n          });\n          console.log(dataToBeSaved, `data From BasicInfoAction.JS`);\n        }\n      })\n      .catch((errorMessage) => {\n        if (errorMessage && hasError) {\n          dispatch(Submiting_BasicInfo_Error(errorMessage));\n          console.log(errorMessage, `errorMessage from BasicInfoAction.JS`);\n        } else {\n          dispatch(Submiting_BasicInfo_Success(dataToBeSaved));\n          console.log(dataToBeSaved, `data From BasicInfoAction.JS`);\n        }\n      });\n  };\n};\n","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\interests\\interests.styles.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\workexperince\\workexperinceAction.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\redux\\addtolist\\addtolistAction.js",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\basicinfo\\uploadimage.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\education\\education.styles.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\basicinfo\\basicinfo.styles.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\education\\addEducation.component.jsx",["606"],"import { useForm } from \"react-hook-form\";\nimport {\n  Button,\n  FormLabel,\n  Input,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Spinner,\n} from \"@chakra-ui/core\";\nimport generateRandom from \"../../../lib/random\";\n\nconst AddEducation = (props) => {\n  const {\n    setFlagButton,\n    FlagButton,\n    initialRef,\n    finalRef,\n    isOpen,\n    onClose,\n    Do_Submiting_Education,\n    collagename,\n    startgraduationyear,\n    endgraduationyear,\n    eduactionmajor,\n    setEducation,\n    education,\n    currentUser,\n    id,\n    toast,\n  } = props;\n\n  const { handleSubmit, register, getValues, errors } = useForm();\n\n  const value = getValues();\n\n  let identiferId = generateRandom();\n\n  education.identiferId = identiferId;\n  const onSubmit = async (value) => {\n    let dataToBeSaved = {\n      education: {\n        collagename: collagename || \"\",\n        startgraduationyear: startgraduationyear || \"\",\n        endgraduationyear: endgraduationyear || \"\",\n        eduactionmajor: eduactionmajor || \"\",\n        lastModified: new Date(),\n        identiferId: identiferId,\n      },\n      type: \"education\",\n    };\n    await Do_Submiting_Education(currentUser, id, dataToBeSaved, toast);\n    setFlagButton(false);\n    setTimeout(() => {\n      onClose();\n    }, 1000);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setEducation({ ...education, [name]: value });\n  };\n  return (\n    <>\n      <Modal\n        initialFocusRef={initialRef}\n        finalFocusRef={finalRef}\n        isOpen={isOpen}\n        onClose={onClose}\n        blockScrollOnMount={true}\n      >\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Add your Eduction</ModalHeader>\n          <ModalCloseButton />\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <ModalBody pb={6}>\n              <FormLabel>Collage name</FormLabel>\n              <Input\n                name=\"collagename\"\n                value={collagename}\n                onChange={handleChange}\n                ref={register({ required: \"this Content is Required\" })}\n                placeholder=\"Collage Name\"\n              />\n              <small className=\"error\">\n                {errors.collagename && errors.collagename.message}\n              </small>\n              <br />\n              <FormLabel>Start Year </FormLabel>\n              <Input\n                name=\"startgraduationyear\"\n                value={startgraduationyear}\n                onChange={handleChange}\n                type=\"date\"\n                ref={register({ required: \"this Content is Required\" })}\n              />\n              <small className=\"error\">\n                {errors.startgraduationyear &&\n                  errors.startgraduationyear.message}\n              </small>\n              <br />\n\n              <FormLabel> End Year </FormLabel>\n              <Input\n                name=\"endgraduationyear\"\n                value={endgraduationyear}\n                onChange={handleChange}\n                type=\"date\"\n                ref={register({ required: \"this Content is Required\" })}\n              />\n              <small className=\"error\">\n                {errors.endgraduationyear && errors.endgraduationyear.message}\n              </small>\n              <br />\n\n              <FormLabel> Education Majoring </FormLabel>\n              <Input\n                name=\"eduactionmajor\"\n                value={eduactionmajor}\n                onChange={handleChange}\n                type=\"text\"\n                placeholder=\"Collage Majoring\"\n                ref={register({ required: \"this Content is Required\" })}\n              />\n              <small className=\"error\">\n                {errors.eduactionmajor && errors.eduactionmajor.message}\n              </small>\n              <br />\n            </ModalBody>\n\n            <ModalFooter>\n              <Button variantColor=\"blue\" mr={3} type=\"submit\">\n                {!FlagButton ? <Spinner /> : \"Save\"}\n              </Button>\n              <Button onClick={onClose}>Cancel</Button>\n            </ModalFooter>\n          </form>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default AddEducation;\n","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\workexperience\\addworkexpernice.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\workexperience\\workexperience.styles.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\references\\references.styles.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\qualifications\\qualifications.styles.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\create-cv\\createcv.styles.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\privacy\\privacy.styles.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\footer\\footer.styles.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\pages\\signin-signup\\signin-signup.styles.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\forget-password\\forget-password.styles.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\header\\header.styles.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\sign-up\\sign-up.component.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\sign-in\\sign-in.component.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\content\\content.component.jsx",["607","608"],"import { Contents, H5, BoxShadow, IMG } from \"./content.styles\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nconst Content = () => {\n  return (\n    <Contents className=\"container\">\n      <img src=\"press.png\" alt=\"\" />\n      <H5>A wide range of templates to choose from</H5>\n      <div className=\"row\">\n        <BoxShadow className=\"col-6\">\n          <img src=\"cv1.png\" alt=\"\" />\n          <hr />\n          <small>Headline</small>\n        </BoxShadow>\n        <BoxShadow className=\"col-6\">\n          <img src=\"cv2.png\" alt=\"\" />\n          <hr />\n          <small>Mocca</small>\n        </BoxShadow>\n      </div>\n      <div className=\"row\">\n        <BoxShadow className=\"col-3\">\n          <img src=\"cv3.png\" alt=\"\" />\n          <hr />\n          <small>Executive</small>\n        </BoxShadow>\n        <BoxShadow className=\"col-3\">\n          <img src=\"cv4.png\" alt=\"\" />\n          <hr />\n          <small>Elegant</small>\n        </BoxShadow>\n        <BoxShadow className=\"col-3\">\n          <img src=\"cv5.png\" alt=\"\" />\n          <hr />\n          <small>Bold</small>\n        </BoxShadow>\n        <BoxShadow className=\"col-3\">\n          <img src=\"cv6.png\" alt=\"\" />\n          <hr />\n          <small>Literateur</small>\n        </BoxShadow>\n      </div>\n      <div className=\"row\">\n        <BoxShadow className=\"col-3\">\n          <img src=\"cv6.png\" alt=\"\" />\n          <hr />\n          <small>Finesse</small>\n        </BoxShadow>\n        <BoxShadow className=\"col-3\">\n          <img src=\"cv7.png\" alt=\"\" />\n          <hr />\n          <small>Metro</small>\n        </BoxShadow>\n      </div>\n\n      <div className=\"row\">\n        <Col xs={12} md={12} lg={12} className=\"text-center\">\n          <IMG src=\"premum.png\" />\n        </Col>\n      </div>\n    </Contents>\n  );\n};\n\nexport default Content;\n","C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\bottom\\botttom.styles.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\nav\\nav.styles.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\carousel\\carousel.component.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\sign-up\\sign-up.styles.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\sign-in\\sign-in.styles.jsx",[],"C:\\Users\\Hossam\\Desktop\\cvmaker\\src\\components\\content\\content.styles.jsx",[],{"ruleId":"609","replacedBy":"610"},{"ruleId":"611","replacedBy":"612"},{"ruleId":"613","severity":1,"message":"614","line":18,"column":8,"nodeType":"615","messageId":"616","endLine":18,"endColumn":23},{"ruleId":"613","severity":1,"message":"617","line":25,"column":8,"nodeType":"615","messageId":"616","endLine":25,"endColumn":16},{"ruleId":"613","severity":1,"message":"618","line":2,"column":44,"nodeType":"615","messageId":"616","endLine":2,"endColumn":49},{"ruleId":"613","severity":1,"message":"619","line":9,"column":21,"nodeType":"615","messageId":"616","endLine":9,"endColumn":33},{"ruleId":"613","severity":1,"message":"620","line":3,"column":3,"nodeType":"615","messageId":"616","endLine":3,"endColumn":6},{"ruleId":"613","severity":1,"message":"621","line":5,"column":3,"nodeType":"615","messageId":"616","endLine":5,"endColumn":6},{"ruleId":"613","severity":1,"message":"622","line":7,"column":3,"nodeType":"615","messageId":"616","endLine":7,"endColumn":7},{"ruleId":"613","severity":1,"message":"623","line":15,"column":10,"nodeType":"615","messageId":"616","endLine":15,"endColumn":13},{"ruleId":"613","severity":1,"message":"624","line":16,"column":10,"nodeType":"615","messageId":"616","endLine":16,"endColumn":20},{"ruleId":"613","severity":1,"message":"619","line":18,"column":21,"nodeType":"615","messageId":"616","endLine":18,"endColumn":33},{"ruleId":"613","severity":1,"message":"625","line":58,"column":17,"nodeType":"615","messageId":"616","endLine":58,"endColumn":25},{"ruleId":"626","severity":1,"message":"627","line":60,"column":62,"nodeType":"628","endLine":60,"endColumn":79},{"ruleId":"613","severity":1,"message":"620","line":3,"column":3,"nodeType":"615","messageId":"616","endLine":3,"endColumn":6},{"ruleId":"613","severity":1,"message":"629","line":13,"column":10,"nodeType":"615","messageId":"616","endLine":13,"endColumn":15},{"ruleId":"613","severity":1,"message":"630","line":13,"column":17,"nodeType":"615","messageId":"616","endLine":13,"endColumn":23},{"ruleId":"613","severity":1,"message":"631","line":23,"column":3,"nodeType":"615","messageId":"616","endLine":23,"endColumn":14},{"ruleId":"613","severity":1,"message":"632","line":25,"column":10,"nodeType":"615","messageId":"616","endLine":25,"endColumn":14},{"ruleId":"613","severity":1,"message":"633","line":27,"column":25,"nodeType":"615","messageId":"616","endLine":27,"endColumn":33},{"ruleId":"613","severity":1,"message":"634","line":27,"column":35,"nodeType":"615","messageId":"616","endLine":27,"endColumn":41},{"ruleId":"613","severity":1,"message":"635","line":27,"column":43,"nodeType":"615","messageId":"616","endLine":27,"endColumn":47},{"ruleId":"613","severity":1,"message":"636","line":29,"column":9,"nodeType":"615","messageId":"616","endLine":29,"endColumn":14},{"ruleId":"613","severity":1,"message":"637","line":37,"column":10,"nodeType":"615","messageId":"616","endLine":37,"endColumn":17},{"ruleId":"613","severity":1,"message":"638","line":49,"column":11,"nodeType":"615","messageId":"616","endLine":49,"endColumn":16},{"ruleId":"613","severity":1,"message":"638","line":52,"column":13,"nodeType":"615","messageId":"616","endLine":52,"endColumn":18},{"ruleId":"613","severity":1,"message":"639","line":52,"column":20,"nodeType":"615","messageId":"616","endLine":52,"endColumn":28},{"ruleId":"613","severity":1,"message":"624","line":4,"column":3,"nodeType":"615","messageId":"616","endLine":4,"endColumn":13},{"ruleId":"613","severity":1,"message":"640","line":6,"column":3,"nodeType":"615","messageId":"616","endLine":6,"endColumn":7},{"ruleId":"613","severity":1,"message":"641","line":7,"column":3,"nodeType":"615","messageId":"616","endLine":7,"endColumn":7},{"ruleId":"613","severity":1,"message":"642","line":14,"column":10,"nodeType":"615","messageId":"616","endLine":14,"endColumn":18},{"ruleId":"613","severity":1,"message":"643","line":14,"column":20,"nodeType":"615","messageId":"616","endLine":14,"endColumn":31},{"ruleId":"613","severity":1,"message":"644","line":15,"column":10,"nodeType":"615","messageId":"616","endLine":15,"endColumn":14},{"ruleId":"613","severity":1,"message":"645","line":15,"column":16,"nodeType":"615","messageId":"616","endLine":15,"endColumn":23},{"ruleId":"613","severity":1,"message":"619","line":6,"column":21,"nodeType":"615","messageId":"616","endLine":6,"endColumn":33},{"ruleId":"613","severity":1,"message":"646","line":2,"column":49,"nodeType":"615","messageId":"616","endLine":2,"endColumn":60},{"ruleId":"613","severity":1,"message":"647","line":4,"column":3,"nodeType":"615","messageId":"616","endLine":4,"endColumn":19},{"ruleId":"613","severity":1,"message":"648","line":6,"column":3,"nodeType":"615","messageId":"616","endLine":6,"endColumn":8},{"ruleId":"613","severity":1,"message":"649","line":7,"column":3,"nodeType":"615","messageId":"616","endLine":7,"endColumn":5},{"ruleId":"613","severity":1,"message":"618","line":10,"column":3,"nodeType":"615","messageId":"616","endLine":10,"endColumn":8},{"ruleId":"613","severity":1,"message":"650","line":11,"column":3,"nodeType":"615","messageId":"616","endLine":11,"endColumn":7},{"ruleId":"613","severity":1,"message":"651","line":12,"column":3,"nodeType":"615","messageId":"616","endLine":12,"endColumn":9},{"ruleId":"613","severity":1,"message":"652","line":20,"column":10,"nodeType":"615","messageId":"616","endLine":20,"endColumn":13},{"ruleId":"613","severity":1,"message":"653","line":22,"column":3,"nodeType":"615","messageId":"616","endLine":22,"endColumn":12},{"ruleId":"613","severity":1,"message":"654","line":23,"column":3,"nodeType":"615","messageId":"616","endLine":23,"endColumn":18},{"ruleId":"613","severity":1,"message":"655","line":24,"column":3,"nodeType":"615","messageId":"616","endLine":24,"endColumn":16},{"ruleId":"613","severity":1,"message":"656","line":25,"column":3,"nodeType":"615","messageId":"616","endLine":25,"endColumn":17},{"ruleId":"613","severity":1,"message":"657","line":26,"column":3,"nodeType":"615","messageId":"616","endLine":26,"endColumn":6},{"ruleId":"613","severity":1,"message":"658","line":27,"column":3,"nodeType":"615","messageId":"616","endLine":27,"endColumn":8},{"ruleId":"613","severity":1,"message":"659","line":28,"column":3,"nodeType":"615","messageId":"616","endLine":28,"endColumn":15},{"ruleId":"613","severity":1,"message":"660","line":29,"column":3,"nodeType":"615","messageId":"616","endLine":29,"endColumn":15},{"ruleId":"613","severity":1,"message":"661","line":30,"column":3,"nodeType":"615","messageId":"616","endLine":30,"endColumn":14},{"ruleId":"613","severity":1,"message":"662","line":31,"column":3,"nodeType":"615","messageId":"616","endLine":31,"endColumn":14},{"ruleId":"613","severity":1,"message":"663","line":32,"column":3,"nodeType":"615","messageId":"616","endLine":32,"endColumn":12},{"ruleId":"613","severity":1,"message":"664","line":33,"column":3,"nodeType":"615","messageId":"616","endLine":33,"endColumn":19},{"ruleId":"613","severity":1,"message":"665","line":34,"column":3,"nodeType":"615","messageId":"616","endLine":34,"endColumn":7},{"ruleId":"613","severity":1,"message":"630","line":40,"column":44,"nodeType":"615","messageId":"616","endLine":40,"endColumn":50},{"ruleId":"666","severity":1,"message":"667","line":157,"column":32,"nodeType":"668","messageId":"669","endLine":157,"endColumn":33},{"ruleId":"613","severity":1,"message":"670","line":248,"column":7,"nodeType":"615","messageId":"616","endLine":248,"endColumn":19},{"ruleId":"613","severity":1,"message":"671","line":68,"column":25,"nodeType":"615","messageId":"616","endLine":68,"endColumn":41},{"ruleId":"613","severity":1,"message":"672","line":136,"column":10,"nodeType":"615","messageId":"616","endLine":136,"endColumn":25},{"ruleId":"613","severity":1,"message":"673","line":147,"column":5,"nodeType":"615","messageId":"616","endLine":147,"endColumn":12},{"ruleId":"613","severity":1,"message":"674","line":148,"column":5,"nodeType":"615","messageId":"616","endLine":148,"endColumn":18},{"ruleId":"613","severity":1,"message":"675","line":162,"column":17,"nodeType":"615","messageId":"616","endLine":162,"endColumn":25},{"ruleId":"613","severity":1,"message":"676","line":164,"column":9,"nodeType":"615","messageId":"616","endLine":164,"endColumn":15},{"ruleId":"613","severity":1,"message":"677","line":168,"column":9,"nodeType":"615","messageId":"616","endLine":168,"endColumn":16},{"ruleId":"613","severity":1,"message":"635","line":178,"column":54,"nodeType":"615","messageId":"616","endLine":178,"endColumn":58},{"ruleId":"613","severity":1,"message":"636","line":180,"column":9,"nodeType":"615","messageId":"616","endLine":180,"endColumn":14},{"ruleId":"613","severity":1,"message":"678","line":259,"column":7,"nodeType":"615","messageId":"616","endLine":259,"endColumn":8},{"ruleId":"613","severity":1,"message":"679","line":290,"column":17,"nodeType":"615","messageId":"616","endLine":290,"endColumn":25},{"ruleId":"613","severity":1,"message":"680","line":292,"column":10,"nodeType":"615","messageId":"616","endLine":292,"endColumn":22},{"ruleId":"613","severity":1,"message":"681","line":292,"column":24,"nodeType":"615","messageId":"616","endLine":292,"endColumn":39},{"ruleId":"613","severity":1,"message":"682","line":3,"column":3,"nodeType":"615","messageId":"616","endLine":3,"endColumn":10},{"ruleId":"613","severity":1,"message":"683","line":6,"column":3,"nodeType":"615","messageId":"616","endLine":6,"endColumn":7},{"ruleId":"613","severity":1,"message":"684","line":7,"column":3,"nodeType":"615","messageId":"616","endLine":7,"endColumn":15},{"ruleId":"613","severity":1,"message":"685","line":11,"column":3,"nodeType":"615","messageId":"616","endLine":11,"endColumn":8},{"ruleId":"613","severity":1,"message":"686","line":12,"column":3,"nodeType":"615","messageId":"616","endLine":12,"endColumn":20},{"ruleId":"613","severity":1,"message":"687","line":13,"column":3,"nodeType":"615","messageId":"616","endLine":13,"endColumn":9},{"ruleId":"613","severity":1,"message":"688","line":14,"column":3,"nodeType":"615","messageId":"616","endLine":14,"endColumn":11},{"ruleId":"613","severity":1,"message":"689","line":15,"column":3,"nodeType":"615","messageId":"616","endLine":15,"endColumn":20},{"ruleId":"613","severity":1,"message":"690","line":16,"column":3,"nodeType":"615","messageId":"616","endLine":16,"endColumn":15},{"ruleId":"613","severity":1,"message":"658","line":24,"column":3,"nodeType":"615","messageId":"616","endLine":24,"endColumn":8},{"ruleId":"613","severity":1,"message":"659","line":25,"column":3,"nodeType":"615","messageId":"616","endLine":25,"endColumn":15},{"ruleId":"613","severity":1,"message":"660","line":26,"column":3,"nodeType":"615","messageId":"616","endLine":26,"endColumn":15},{"ruleId":"613","severity":1,"message":"661","line":27,"column":3,"nodeType":"615","messageId":"616","endLine":27,"endColumn":14},{"ruleId":"613","severity":1,"message":"662","line":28,"column":3,"nodeType":"615","messageId":"616","endLine":28,"endColumn":14},{"ruleId":"613","severity":1,"message":"663","line":29,"column":3,"nodeType":"615","messageId":"616","endLine":29,"endColumn":12},{"ruleId":"613","severity":1,"message":"664","line":30,"column":3,"nodeType":"615","messageId":"616","endLine":30,"endColumn":19},{"ruleId":"613","severity":1,"message":"665","line":31,"column":3,"nodeType":"615","messageId":"616","endLine":31,"endColumn":7},{"ruleId":"613","severity":1,"message":"691","line":6,"column":10,"nodeType":"615","messageId":"616","endLine":6,"endColumn":20},{"ruleId":"613","severity":1,"message":"692","line":1,"column":8,"nodeType":"615","messageId":"616","endLine":1,"endColumn":24},{"ruleId":"613","severity":1,"message":"693","line":1,"column":30,"nodeType":"615","messageId":"616","endLine":1,"endColumn":39},{"ruleId":"613","severity":1,"message":"694","line":1,"column":41,"nodeType":"615","messageId":"616","endLine":1,"endColumn":47},{"ruleId":"613","severity":1,"message":"695","line":1,"column":49,"nodeType":"615","messageId":"616","endLine":1,"endColumn":64},{"ruleId":"613","severity":1,"message":"629","line":7,"column":19,"nodeType":"615","messageId":"616","endLine":7,"endColumn":24},{"ruleId":"613","severity":1,"message":"634","line":36,"column":46,"nodeType":"615","messageId":"616","endLine":36,"endColumn":52},{"ruleId":"613","severity":1,"message":"636","line":53,"column":9,"nodeType":"615","messageId":"616","endLine":53,"endColumn":14},{"ruleId":"613","severity":1,"message":"696","line":1,"column":8,"nodeType":"615","messageId":"616","endLine":1,"endColumn":13},{"ruleId":"613","severity":1,"message":"697","line":33,"column":11,"nodeType":"615","messageId":"616","endLine":33,"endColumn":18},{"ruleId":"613","severity":1,"message":"698","line":33,"column":20,"nodeType":"615","messageId":"616","endLine":33,"endColumn":37},{"ruleId":"613","severity":1,"message":"699","line":33,"column":39,"nodeType":"615","messageId":"616","endLine":33,"endColumn":43},{"ruleId":"613","severity":1,"message":"634","line":35,"column":46,"nodeType":"615","messageId":"616","endLine":35,"endColumn":52},{"ruleId":"613","severity":1,"message":"635","line":35,"column":54,"nodeType":"615","messageId":"616","endLine":35,"endColumn":58},{"ruleId":"613","severity":1,"message":"636","line":39,"column":9,"nodeType":"615","messageId":"616","endLine":39,"endColumn":14},{"ruleId":"613","severity":1,"message":"637","line":41,"column":10,"nodeType":"615","messageId":"616","endLine":41,"endColumn":17},{"ruleId":"700","severity":1,"message":"701","line":34,"column":6,"nodeType":"702","endLine":34,"endColumn":26,"suggestions":"703"},{"ruleId":"613","severity":1,"message":"697","line":42,"column":11,"nodeType":"615","messageId":"616","endLine":42,"endColumn":18},{"ruleId":"613","severity":1,"message":"704","line":42,"column":20,"nodeType":"615","messageId":"616","endLine":42,"endColumn":42},{"ruleId":"613","severity":1,"message":"699","line":42,"column":44,"nodeType":"615","messageId":"616","endLine":42,"endColumn":48},{"ruleId":"613","severity":1,"message":"634","line":44,"column":46,"nodeType":"615","messageId":"616","endLine":44,"endColumn":52},{"ruleId":"613","severity":1,"message":"635","line":44,"column":54,"nodeType":"615","messageId":"616","endLine":44,"endColumn":58},{"ruleId":"613","severity":1,"message":"636","line":48,"column":9,"nodeType":"615","messageId":"616","endLine":48,"endColumn":14},{"ruleId":"613","severity":1,"message":"637","line":50,"column":10,"nodeType":"615","messageId":"616","endLine":50,"endColumn":17},{"ruleId":"700","severity":1,"message":"705","line":128,"column":6,"nodeType":"702","endLine":128,"endColumn":19,"suggestions":"706"},{"ruleId":"700","severity":1,"message":"701","line":33,"column":6,"nodeType":"702","endLine":33,"endColumn":22,"suggestions":"707"},{"ruleId":"613","severity":1,"message":"697","line":41,"column":11,"nodeType":"615","messageId":"616","endLine":41,"endColumn":18},{"ruleId":"613","severity":1,"message":"708","line":41,"column":20,"nodeType":"615","messageId":"616","endLine":41,"endColumn":38},{"ruleId":"613","severity":1,"message":"699","line":41,"column":40,"nodeType":"615","messageId":"616","endLine":41,"endColumn":44},{"ruleId":"613","severity":1,"message":"634","line":43,"column":46,"nodeType":"615","messageId":"616","endLine":43,"endColumn":52},{"ruleId":"613","severity":1,"message":"635","line":43,"column":54,"nodeType":"615","messageId":"616","endLine":43,"endColumn":58},{"ruleId":"613","severity":1,"message":"636","line":47,"column":9,"nodeType":"615","messageId":"616","endLine":47,"endColumn":14},{"ruleId":"613","severity":1,"message":"637","line":49,"column":10,"nodeType":"615","messageId":"616","endLine":49,"endColumn":17},{"ruleId":"613","severity":1,"message":"709","line":20,"column":3,"nodeType":"615","messageId":"616","endLine":20,"endColumn":19},{"ruleId":"613","severity":1,"message":"710","line":23,"column":10,"nodeType":"615","messageId":"616","endLine":23,"endColumn":26},{"ruleId":"613","severity":1,"message":"711","line":36,"column":5,"nodeType":"615","messageId":"616","endLine":36,"endColumn":14},{"ruleId":"613","severity":1,"message":"712","line":74,"column":5,"nodeType":"615","messageId":"616","endLine":74,"endColumn":16},{"ruleId":"613","severity":1,"message":"713","line":75,"column":5,"nodeType":"615","messageId":"616","endLine":75,"endColumn":14},{"ruleId":"613","severity":1,"message":"714","line":76,"column":5,"nodeType":"615","messageId":"616","endLine":76,"endColumn":12},{"ruleId":"613","severity":1,"message":"715","line":77,"column":5,"nodeType":"615","messageId":"616","endLine":77,"endColumn":13},{"ruleId":"613","severity":1,"message":"680","line":78,"column":5,"nodeType":"615","messageId":"616","endLine":78,"endColumn":17},{"ruleId":"700","severity":1,"message":"716","line":84,"column":6,"nodeType":"702","endLine":84,"endColumn":8,"suggestions":"717"},{"ruleId":"613","severity":1,"message":"718","line":118,"column":9,"nodeType":"615","messageId":"616","endLine":118,"endColumn":31},{"ruleId":"700","severity":1,"message":"719","line":67,"column":6,"nodeType":"702","endLine":74,"endColumn":4,"suggestions":"720"},{"ruleId":"613","severity":1,"message":"680","line":87,"column":5,"nodeType":"615","messageId":"616","endLine":87,"endColumn":17},{"ruleId":"613","severity":1,"message":"721","line":6,"column":3,"nodeType":"615","messageId":"616","endLine":6,"endColumn":10},{"ruleId":"613","severity":1,"message":"646","line":7,"column":3,"nodeType":"615","messageId":"616","endLine":7,"endColumn":14},{"ruleId":"613","severity":1,"message":"722","line":18,"column":10,"nodeType":"615","messageId":"616","endLine":18,"endColumn":17},{"ruleId":"613","severity":1,"message":"723","line":20,"column":33,"nodeType":"615","messageId":"616","endLine":20,"endColumn":41},{"ruleId":"613","severity":1,"message":"724","line":24,"column":21,"nodeType":"615","messageId":"616","endLine":24,"endColumn":28},{"ruleId":"613","severity":1,"message":"725","line":36,"column":8,"nodeType":"615","messageId":"616","endLine":36,"endColumn":19},{"ruleId":"613","severity":1,"message":"726","line":44,"column":5,"nodeType":"615","messageId":"616","endLine":44,"endColumn":10},{"ruleId":"613","severity":1,"message":"727","line":45,"column":5,"nodeType":"615","messageId":"616","endLine":45,"endColumn":8},{"ruleId":"613","severity":1,"message":"728","line":46,"column":5,"nodeType":"615","messageId":"616","endLine":46,"endColumn":9},{"ruleId":"613","severity":1,"message":"729","line":47,"column":5,"nodeType":"615","messageId":"616","endLine":47,"endColumn":14},{"ruleId":"613","severity":1,"message":"730","line":51,"column":5,"nodeType":"615","messageId":"616","endLine":51,"endColumn":10},{"ruleId":"613","severity":1,"message":"677","line":58,"column":9,"nodeType":"615","messageId":"616","endLine":58,"endColumn":16},{"ruleId":"613","severity":1,"message":"635","line":60,"column":54,"nodeType":"615","messageId":"616","endLine":60,"endColumn":58},{"ruleId":"613","severity":1,"message":"636","line":62,"column":9,"nodeType":"615","messageId":"616","endLine":62,"endColumn":14},{"ruleId":"700","severity":1,"message":"731","line":171,"column":6,"nodeType":"702","endLine":171,"endColumn":56,"suggestions":"732"},{"ruleId":"613","severity":1,"message":"675","line":173,"column":17,"nodeType":"615","messageId":"616","endLine":173,"endColumn":25},{"ruleId":"613","severity":1,"message":"676","line":175,"column":9,"nodeType":"615","messageId":"616","endLine":175,"endColumn":15},{"ruleId":"613","severity":1,"message":"635","line":14,"column":54,"nodeType":"615","messageId":"616","endLine":14,"endColumn":58},{"ruleId":"613","severity":1,"message":"636","line":16,"column":9,"nodeType":"615","messageId":"616","endLine":16,"endColumn":14},{"ruleId":"613","severity":1,"message":"733","line":42,"column":11,"nodeType":"615","messageId":"616","endLine":42,"endColumn":19},{"ruleId":"613","severity":1,"message":"734","line":56,"column":7,"nodeType":"615","messageId":"616","endLine":56,"endColumn":32},{"ruleId":"613","severity":1,"message":"733","line":22,"column":7,"nodeType":"615","messageId":"616","endLine":22,"endColumn":15},{"ruleId":"613","severity":1,"message":"636","line":39,"column":9,"nodeType":"615","messageId":"616","endLine":39,"endColumn":14},{"ruleId":"613","severity":1,"message":"735","line":2,"column":10,"nodeType":"615","messageId":"616","endLine":2,"endColumn":19},{"ruleId":"613","severity":1,"message":"623","line":2,"column":21,"nodeType":"615","messageId":"616","endLine":2,"endColumn":24},"no-native-reassign",["736"],"no-negated-in-lhs",["737"],"no-unused-vars","'PublicOnlyRoute' is defined but never used.","Identifier","unusedVar","'NotFound' is defined but never used.","'Small' is defined but never used.","'setLanguages' is assigned a value but never used.","'COL' is defined but never used.","'IMG' is defined but never used.","'FLAG' is defined but never used.","'Row' is defined but never used.","'RapperdCol' is defined but never used.","'setLinks' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Input' is defined but never used.","'Button' is defined but never used.","'CloseButton' is defined but never used.","'Link' is defined but never used.","'register' is assigned a value but never used.","'errors' is assigned a value but never used.","'data' is assigned a value but never used.","'value' is assigned a value but never used.","'loading' is assigned a value but never used.","'email' is assigned a value but never used.","'password' is assigned a value but never used.","'LINK' is defined but never used.","'COLL' is defined but never used.","'download' is assigned a value but never used.","'setDownload' is assigned a value but never used.","'save' is assigned a value but never used.","'setSave' is assigned a value but never used.","'useCallback' is defined but never used.","'ButtonForPremium' is defined but never used.","'Green' is defined but never used.","'H2' is defined but never used.","'Span' is defined but never used.","'Strong' is defined but never used.","'Col' is defined but never used.","'Accordion' is defined but never used.","'AccordionHeader' is defined but never used.","'AccordionItem' is defined but never used.","'AccordionPanel' is defined but never used.","'Box' is defined but never used.","'Modal' is defined but never used.","'ModalOverlay' is defined but never used.","'ModalContent' is defined but never used.","'ModalHeader' is defined but never used.","'ModalFooter' is defined but never used.","'ModalBody' is defined but never used.","'ModalCloseButton' is defined but never used.","'Text' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'PrivateRoute' is assigned a value but never used.","'setSidebarRouter' is assigned a value but never used.","'displayDataToUI' is assigned a value but never used.","'tryflag' is assigned a value but never used.","'OldCvForUsers' is assigned a value but never used.","'setColor' is assigned a value but never used.","'styles' is assigned a value but never used.","'history' is assigned a value but never used.","'c' is defined but never used.","'setArray' is assigned a value but never used.","'lastModified' is assigned a value but never used.","'setLastModified' is assigned a value but never used.","'Content' is defined but never used.","'Icon' is defined but never used.","'RapperdColor' is defined but never used.","'Title' is defined but never used.","'ButtonforcreateCv' is defined but never used.","'Linkcv' is defined but never used.","'Iconedit' is defined but never used.","'ButtonForDeleteCv' is defined but never used.","'IconCalendar' is defined but never used.","'BsCalendar' is defined but never used.","'AddToListReducer' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'useLayoutEffect' is defined but never used.","'React' is defined but never used.","'concept' is assigned a value but never used.","'content_intersets' is assigned a value but never used.","'type' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["738"],"'content_Qualifications' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["739"],["740"],"'content_references' is assigned a value but never used.","'SingleIconDelete' is defined but never used.","'BsFillBucketFill' is defined but never used.","'AddToList' is assigned a value but never used.","'companyname' is assigned a value but never used.","'startwork' is assigned a value but never used.","'endwork' is assigned a value but never used.","'position' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'Do_Delete_Cv', 'currentUser', 'id', and 'toast'. Either include them or remove the dependency array.",["741"],"'handleClickedForDelete' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'EducationState'. Either include it or remove the dependency array.",["742"],"'useMemo' is defined but never used.","'BsCheck' is defined but never used.","'Progress' is defined but never used.","'storage' is defined but never used.","'ImageUpload' is defined but never used.","'match' is assigned a value but never used.","'doc' is assigned a value but never used.","'info' is assigned a value but never used.","'basicinfo' is assigned a value but never used.","'oldId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'basicInfoState', 'dataform', and 'toast'. Either include them or remove the dependency array.",["743"],"'hasError' is assigned a value but never used.","'Submiting_Education_Start' is assigned a value but never used.","'Container' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"744","fix":"745"},{"desc":"746","fix":"747"},{"desc":"748","fix":"749"},{"desc":"750","fix":"751"},{"desc":"752","fix":"753"},{"desc":"754","fix":"755"},"Update the dependencies array to be: [Get_Qualifications, currentUser, id]",{"range":"756","text":"757"},"Update the dependencies array to be: [currentUser, id]",{"range":"758","text":"759"},"Update the dependencies array to be: [Get_References, currentUser, id]",{"range":"760","text":"761"},"Update the dependencies array to be: [Do_Delete_Cv, currentUser, id, toast]",{"range":"762","text":"763"},"Update the dependencies array to be: [GET_Education, currentUser, id, toast, setEducation, EducationState.identiferId, EducationState]",{"range":"764","text":"765"},"Update the dependencies array to be: [GetBasicInfo, currentUser, id, basicInfoState.id, toast, basicInfoState, dataform]",{"range":"766","text":"767"},[998,1018],"[Get_Qualifications, currentUser, id]",[3264,3277],"[currentUser, id]",[987,1003],"[Get_References, currentUser, id]",[1946,1948],"[Do_Delete_Cv, currentUser, id, toast]",[1611,1721],"[GET_Education, currentUser, id, toast, setEducation, EducationState.identiferId, EducationState]",[4367,4417],"[GetBasicInfo, currentUser, id, basicInfoState.id, toast, basicInfoState, dataform]"]